{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Charts/Recharts/components/DashedLineChart.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nvar data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nvar DashedLineChart = function DashedLineChart(_ref) {\n  var t = _ref.t,\n      dir = _ref.dir;\n  return React.createElement(Col, {\n    xs: 12,\n    md: 12,\n    lg: 12,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, t('charts.recharts.dashed_line_chart'))), React.createElement(\"div\", {\n    dir: \"ltr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data,\n    margin: {\n      top: 0,\n      right: 0,\n      left: -15,\n      bottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"name\",\n    reversed: dir === 'rtl',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    orientation: dir === 'rtl' ? 'right' : 'left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"pv\",\n    stroke: \"#4ce1b6\",\n    strokeDasharray: \"5 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#70bbfd\",\n    strokeDasharray: \"3 4 5 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"amt\",\n    stroke: \"#f6da6e\",\n    strokeDasharray: \"10 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))))));\n};\n\nDashedLineChart.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired\n};\nexport default withTranslation('common')(DashedLineChart);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Charts/Recharts/components/DashedLineChart.jsx"],"names":["React","Card","CardBody","Col","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","withTranslation","PropTypes","data","name","uv","pv","amt","DashedLineChart","t","dir","top","right","left","bottom","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nconst DashedLineChart = ({ t, dir }) => (\n  <Col xs={12} md={12} lg={12} xl={6}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('charts.recharts.dashed_line_chart')}</h5>\n        </div>\n        <div dir=\"ltr\">\n          <ResponsiveContainer height={300}>\n            <LineChart\n              data={data}\n              margin={{\n                top: 0, right: 0, left: -15, bottom: 0,\n              }}\n            >\n              <XAxis dataKey=\"name\" reversed={dir === 'rtl'} />\n              <YAxis orientation={dir === 'rtl' ? 'right' : 'left'} />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#4ce1b6\" strokeDasharray=\"5 5\" />\n              <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#70bbfd\" strokeDasharray=\"3 4 5 2\" />\n              <Line type=\"monotone\" dataKey=\"amt\" stroke=\"#f6da6e\" strokeDasharray=\"10 5\" />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nDashedLineChart.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nexport default withTranslation('common')(DashedLineChart);\n"]},"metadata":{},"sourceType":"module"}