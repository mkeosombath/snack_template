{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/Form/FloatingLabelsForm/components/AnimatedLineFormWithLabels.jsx\";\n\n/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nvar renderTextField = function renderTextField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      children = _ref.children,\n      select = _ref.select;\n  return React.createElement(TextField, {\n    className: \"material-form__field\",\n    label: label,\n    error: touched && error,\n    value: input.value,\n    children: children,\n    select: select,\n    onChange: function onChange(e) {\n      e.preventDefault();\n      input.onChange(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nrenderTextField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  select: PropTypes.bool,\n  children: PropTypes.arrayOf(PropTypes.element)\n};\nrenderTextField.defaultProps = {\n  meta: null,\n  select: false,\n  children: []\n};\n\nvar AnimatedLineFormWithLabels = function AnimatedLineFormWithLabels(_ref2) {\n  var handleSubmit = _ref2.handleSubmit,\n      reset = _ref2.reset,\n      t = _ref2.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, t('forms.floating_labels_form.animated_line_inputs')), React.createElement(\"h5\", {\n    className: \"subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Material fields with a property \", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"label\"))), React.createElement(\"form\", {\n    className: \"material-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    component: renderTextField,\n    placeholder: \"Name\",\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    component: renderTextField,\n    placeholder: \"example@mail.com\",\n    type: \"email\",\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"url\",\n    component: renderTextField,\n    placeholder: \"https://themeforest.net\",\n    label: \"URL\",\n    type: \"url\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"password\",\n    component: renderTextField,\n    type: \"password\",\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"select\",\n    component: renderTextField,\n    select: true,\n    label: \"Select Option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    className: \"material-form__option\",\n    value: \"one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"One\"), React.createElement(MenuItem, {\n    className: \"material-form__option\",\n    value: \"two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Two\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"textarea\",\n    component: renderTextField,\n    placeholder: \"Type message here\",\n    multiline: true,\n    rowsMax: \"4\",\n    label: \"Text Area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(ButtonToolbar, {\n    className: \"form__button-toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    type: \"button\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Cancel\"))))));\n};\n\nAnimatedLineFormWithLabels.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired\n};\nexport default reduxForm({\n  form: 'floating_labels_form' // a unique identifier for this form\n\n})(withTranslation('common')(AnimatedLineFormWithLabels));","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/Form/FloatingLabelsForm/components/AnimatedLineFormWithLabels.jsx"],"names":["React","Card","CardBody","Col","Button","ButtonToolbar","Field","reduxForm","TextField","MenuItem","withTranslation","PropTypes","renderTextField","input","label","meta","touched","error","children","select","value","e","preventDefault","onChange","target","propTypes","shape","isRequired","string","bool","arrayOf","element","defaultProps","AnimatedLineFormWithLabels","handleSubmit","reset","t","func","form"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst renderTextField = ({\n  input, label, meta: { touched, error }, children, select,\n}) => (\n  <TextField\n    className=\"material-form__field\"\n    label={label}\n    error={touched && error}\n    value={input.value}\n    children={children}\n    select={select}\n    onChange={(e) => {\n      e.preventDefault();\n      input.onChange(e.target.value);\n    }}\n  />\n);\n\nrenderTextField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n  select: PropTypes.bool,\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nrenderTextField.defaultProps = {\n  meta: null,\n  select: false,\n  children: [],\n};\n\nconst AnimatedLineFormWithLabels = ({ handleSubmit, reset, t }) => (\n  <Col md={12} lg={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('forms.floating_labels_form.animated_line_inputs')}</h5>\n          <h5 className=\"subhead\">Material fields with a property <span className=\"red-text\">label</span></h5>\n        </div>\n        <form className=\"material-form\" onSubmit={handleSubmit}>\n          <div>\n            <Field\n              name=\"username\"\n              component={renderTextField}\n              placeholder=\"Name\"\n              label=\"Username\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"email\"\n              component={renderTextField}\n              placeholder=\"example@mail.com\"\n              type=\"email\"\n              label=\"Email\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"url\"\n              component={renderTextField}\n              placeholder=\"https://themeforest.net\"\n              label=\"URL\"\n              type=\"url\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"password\"\n              component={renderTextField}\n              type=\"password\"\n              label=\"Password\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"select\"\n              component={renderTextField}\n              select\n              label=\"Select Option\"\n            >\n              <MenuItem className=\"material-form__option\" value=\"one\">One</MenuItem>\n              <MenuItem className=\"material-form__option\" value=\"two\">Two</MenuItem>\n            </Field>\n          </div>\n          <div>\n            <Field\n              name=\"textarea\"\n              component={renderTextField}\n              placeholder=\"Type message here\"\n              multiline\n              rowsMax=\"4\"\n              label=\"Text Area\"\n            />\n          </div>\n          <ButtonToolbar className=\"form__button-toolbar\">\n            <Button color=\"primary\" type=\"submit\">Submit</Button>\n            <Button type=\"button\" onClick={reset}>\n                  Cancel\n            </Button>\n          </ButtonToolbar>\n        </form>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nAnimatedLineFormWithLabels.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: 'floating_labels_form', // a unique identifier for this form\n})(withTranslation('common')(AnimatedLineFormWithLabels));\n"]},"metadata":{},"sourceType":"module"}