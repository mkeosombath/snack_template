{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Dashboards/ECommerce/components/ProductSales.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\nvar data = [{\n  name: 'Mon',\n  plan: 590,\n  pv: 800,\n  current: 1400\n}, {\n  name: 'Tue',\n  plan: 868,\n  pv: 967,\n  current: 1506\n}, {\n  name: 'Wed',\n  plan: 1397,\n  pv: 1098,\n  current: 989\n}, {\n  name: 'Thu',\n  plan: 1480,\n  pv: 1200,\n  current: 1228\n}, {\n  name: 'Fri',\n  plan: 1520,\n  pv: 1108,\n  current: 1100\n}, {\n  name: 'Sat',\n  plan: 1520,\n  pv: 1108,\n  current: 1100\n}, {\n  name: 'Sun',\n  plan: 1400,\n  pv: 680,\n  current: 1700\n}];\n\nvar ProductSales = function ProductSales(_ref) {\n  var t = _ref.t,\n      rtl = _ref.rtl,\n      themeName = _ref.themeName;\n  return React.createElement(Panel, {\n    lg: 12,\n    title: t('dashboard_commerce.product_sales'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dir: \"ltr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 250,\n    className: \"dashboard__area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: data,\n    margin: {\n      top: 20,\n      left: -15,\n      bottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"name\",\n    tickLine: false,\n    reversed: rtl === 'rtl',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    tickLine: false,\n    orientation: rtl === 'rtl' ? 'right' : 'left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Area, {\n    name: \"Current Sales\",\n    type: \"monotone\",\n    dataKey: \"current\",\n    fill: \"#4ce1b6\",\n    stroke: \"#4ce1b6\",\n    fillOpacity: 0.2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Area, {\n    name: \"Plan Sales\",\n    type: \"monotone\",\n    dataKey: \"plan\",\n    fill: \"#70bbfd\",\n    stroke: \"#70bbfd\",\n    fillOpacity: 0.2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n};\n\nProductSales.propTypes = {\n  t: PropTypes.func.isRequired,\n  rtl: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(function (state) {\n  return {\n    themeName: state.theme.className\n  };\n})(withTranslation('common')(ProductSales));","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Dashboards/ECommerce/components/ProductSales.jsx"],"names":["React","connect","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","withTranslation","PropTypes","Panel","getTooltipStyles","data","name","plan","pv","current","ProductSales","t","rtl","themeName","top","left","bottom","propTypes","func","isRequired","string","state","theme","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\n\nimport getTooltipStyles from '../../../../shared/helpers';\n\nconst data = [{\n  name: 'Mon', plan: 590, pv: 800, current: 1400,\n},\n{\n  name: 'Tue', plan: 868, pv: 967, current: 1506,\n},\n{\n  name: 'Wed', plan: 1397, pv: 1098, current: 989,\n},\n{\n  name: 'Thu', plan: 1480, pv: 1200, current: 1228,\n},\n{\n  name: 'Fri', plan: 1520, pv: 1108, current: 1100,\n},\n{\n  name: 'Sat', plan: 1520, pv: 1108, current: 1100,\n},\n{\n  name: 'Sun', plan: 1400, pv: 680, current: 1700,\n}];\n\nconst ProductSales = ({ t, rtl, themeName }) => (\n  <Panel lg={12} title={t('dashboard_commerce.product_sales')}>\n    <div dir=\"ltr\">\n      <ResponsiveContainer height={250} className=\"dashboard__area\">\n        <AreaChart data={data} margin={{ top: 20, left: -15, bottom: 20 }}>\n          <XAxis dataKey=\"name\" tickLine={false} reversed={rtl === 'rtl'} />\n          <YAxis tickLine={false} orientation={rtl === 'rtl' ? 'right' : 'left'} />\n          <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n          <Legend />\n          <CartesianGrid />\n          <Area\n            name=\"Current Sales\"\n            type=\"monotone\"\n            dataKey=\"current\"\n            fill=\"#4ce1b6\"\n            stroke=\"#4ce1b6\"\n            fillOpacity={0.2}\n          />\n          <Area name=\"Plan Sales\" type=\"monotone\" dataKey=\"plan\" fill=\"#70bbfd\" stroke=\"#70bbfd\" fillOpacity={0.2} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  </Panel>\n);\n\nProductSales.propTypes = {\n  t: PropTypes.func.isRequired,\n  rtl: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(ProductSales));\n"]},"metadata":{},"sourceType":"module"}