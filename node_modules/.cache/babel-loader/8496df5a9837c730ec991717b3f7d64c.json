{"ast":null,"code":"import _toConsumableArray from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Tables/MaterialTable/components/MatTable.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MatTableHead from './MatTableHead';\nimport MatTableToolbar from './MatTableToolbar';\nvar counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {\n    id: counter,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nfunction getSorting(order, orderBy) {\n  if (order === 'desc') {\n    return function (a, b) {\n      if (a[orderBy] < b[orderBy]) {\n        return -1;\n      }\n\n      if (a[orderBy] > b[orderBy]) {\n        return 1;\n      }\n\n      return 0;\n    };\n  }\n\n  return function (a, b) {\n    if (a[orderBy] > b[orderBy]) {\n      return -1;\n    }\n\n    if (a[orderBy] < b[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  };\n}\n\nvar MatTable =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MatTable, _PureComponent);\n\n  function MatTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MatTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MatTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: new Map([]),\n      data: [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = 'desc';\n      var _this$state = _this.state,\n          stateOrderBy = _this$state.orderBy,\n          stateOrder = _this$state.order;\n\n      if (stateOrderBy === property && stateOrder === 'desc') {\n        order = 'asc';\n      }\n\n      _this.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    };\n\n    _this.handleSelectAllClick = function (event, checked) {\n      if (checked) {\n        var data = _this.state.data;\n        var newSelected = new Map();\n        data.map(function (n) {\n          return newSelected.set(n.id, true);\n        });\n\n        _this.setState({\n          selected: newSelected\n        });\n\n        return;\n      }\n\n      _this.setState({\n        selected: new Map([])\n      });\n    };\n\n    _this.handleClick = function (event, id) {\n      var selected = _this.state.selected;\n      var newSelected = new Map(selected);\n      var value = newSelected.get(id);\n      var isActive = true;\n\n      if (value) {\n        isActive = false;\n      }\n\n      newSelected.set(id, isActive);\n\n      _this.setState({\n        selected: newSelected\n      });\n    };\n\n    _this.handleChangePage = function (event, page) {\n      _this.setState({\n        page: page\n      });\n    };\n\n    _this.handleChangeRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this.handleDeleteSelected = function () {\n      var data = _this.state.data;\n\n      var copyData = _toConsumableArray(data);\n\n      var selected = _this.state.selected;\n\n      var _loop = function _loop(i) {\n        copyData = copyData.filter(function (obj) {\n          return obj.id !== selected[i];\n        });\n      };\n\n      for (var i = 0; i < _toConsumableArray(selected).filter(function (el) {\n        return el[1];\n      }).length; i += 1) {\n        _loop(i);\n      }\n\n      _this.setState({\n        data: copyData,\n        selected: new Map([])\n      });\n    };\n\n    _this.isSelected = function (id) {\n      var selected = _this.state.selected;\n      return !!selected.get(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(MatTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          order = _this$state2.order,\n          orderBy = _this$state2.orderBy,\n          selected = _this$state2.selected,\n          rowsPerPage = _this$state2.rowsPerPage,\n          page = _this$state2.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Material table\")), React.createElement(MatTableToolbar, {\n        numSelected: _toConsumableArray(selected).filter(function (el) {\n          return el[1];\n        }).length,\n        handleDeleteSelected: this.handleDeleteSelected,\n        onRequestSort: this.handleRequestSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"material-table__wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"material-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(MatTableHead, {\n        numSelected: _toConsumableArray(selected).filter(function (el) {\n          return el[1];\n        }).length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: data.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, data.sort(getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (d) {\n        var isSelected = _this2.isSelected(d.id);\n\n        return React.createElement(TableRow, {\n          className: \"material-table__row\",\n          role: \"checkbox\",\n          onClick: function onClick(event) {\n            return _this2.handleClick(event, d.id);\n          },\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: d.id,\n          selected: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: \"material-table__cell\",\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          className: \"material-table__checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          className: \"material-table__cell material-table__cell-right\",\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, d.name), React.createElement(TableCell, {\n          className: \"material-table__cell material-table__cell-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, d.calories), React.createElement(TableCell, {\n          className: \"material-table__cell material-table__cell-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, d.fat), React.createElement(TableCell, {\n          className: \"material-table__cell material-table__cell-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, d.carbs), React.createElement(TableCell, {\n          className: \"material-table__cell material-table__cell-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, d.protein));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        component: \"div\",\n        className: \"material-table__pagination\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        rowsPerPageOptions: [5, 10, 15],\n        dir: \"ltr\",\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MatTable;\n}(PureComponent);\n\nexport { MatTable as default };","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Tables/MaterialTable/components/MatTable.jsx"],"names":["React","PureComponent","Card","CardBody","Col","Table","TableBody","TableCell","TablePagination","TableRow","Checkbox","MatTableHead","MatTableToolbar","counter","createData","name","calories","fat","carbs","protein","id","getSorting","order","orderBy","a","b","MatTable","state","selected","Map","data","page","rowsPerPage","handleRequestSort","event","property","stateOrderBy","stateOrder","setState","handleSelectAllClick","checked","newSelected","map","n","set","handleClick","value","get","isActive","handleChangePage","handleChangeRowsPerPage","target","handleDeleteSelected","copyData","i","filter","obj","el","length","isSelected","emptyRows","Math","min","sort","slice","d","height","inputProps","native"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MatTableHead from './MatTableHead';\nimport MatTableToolbar from './MatTableToolbar';\n\nlet counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {\n    id: counter, name, calories, fat, carbs, protein,\n  };\n}\n\nfunction getSorting(order, orderBy) {\n  if (order === 'desc') {\n    return (a, b) => {\n      if (a[orderBy] < b[orderBy]) {\n        return -1;\n      }\n      if (a[orderBy] > b[orderBy]) {\n        return 1;\n      }\n      return 0;\n    };\n  }\n  return (a, b) => {\n    if (a[orderBy] > b[orderBy]) {\n      return -1;\n    }\n    if (a[orderBy] < b[orderBy]) {\n      return 1;\n    }\n    return 0;\n  };\n}\n\nexport default class MatTable extends PureComponent {\n  state = {\n    order: 'asc',\n    orderBy: 'calories',\n    selected: new Map([]),\n    data: [\n      createData('Cupcake', 305, 3.7, 67, 4.3),\n      createData('Donut', 452, 25.0, 51, 4.9),\n      createData('Eclair', 262, 16.0, 24, 6.0),\n      createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n      createData('Gingerbread', 356, 16.0, 49, 3.9),\n      createData('Honeycomb', 408, 3.2, 87, 6.5),\n      createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n      createData('Jelly Bean', 375, 0.0, 94, 0.0),\n      createData('KitKat', 518, 26.0, 65, 7.0),\n      createData('Lollipop', 392, 0.2, 98, 0.0),\n      createData('Marshmallow', 318, 0, 81, 2.0),\n      createData('Nougat', 360, 19.0, 9, 37.0),\n      createData('Oreo', 437, 18.0, 63, 4.0),\n    ],\n    page: 0,\n    rowsPerPage: 5,\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n    const { orderBy: stateOrderBy, order: stateOrder } = this.state;\n\n    if (stateOrderBy === property && stateOrder === 'desc') { order = 'asc'; }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = (event, checked) => {\n    if (checked) {\n      const { data } = this.state;\n      const newSelected = new Map();\n      data.map(n => newSelected.set(n.id, true));\n      this.setState({ selected: newSelected });\n      return;\n    }\n    this.setState({ selected: new Map([]) });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const newSelected = new Map(selected);\n    const value = newSelected.get(id);\n    let isActive = true;\n    if (value) {\n      isActive = false;\n    }\n    newSelected.set(id, isActive);\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleDeleteSelected = () => {\n    const { data } = this.state;\n    let copyData = [...data];\n    const { selected } = this.state;\n\n    for (let i = 0; i < [...selected].filter(el => el[1]).length; i += 1) {\n      copyData = copyData.filter(obj => obj.id !== selected[i]);\n    }\n\n    this.setState({ data: copyData, selected: new Map([]) });\n  };\n\n  isSelected = (id) => {\n    const { selected } = this.state;\n    return !!selected.get(id);\n  };\n\n  render() {\n    const {\n      data, order, orderBy, selected, rowsPerPage, page,\n    } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - (page * rowsPerPage));\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">Material table</h5>\n            </div>\n            <MatTableToolbar\n              numSelected={[...selected].filter(el => el[1]).length}\n              handleDeleteSelected={this.handleDeleteSelected}\n              onRequestSort={this.handleRequestSort}\n            />\n            <div className=\"material-table__wrap\">\n              <Table className=\"material-table\">\n                <MatTableHead\n                  numSelected={[...selected].filter(el => el[1]).length}\n                  order={order}\n                  orderBy={orderBy}\n                  onSelectAllClick={this.handleSelectAllClick}\n                  onRequestSort={this.handleRequestSort}\n                  rowCount={data.length}\n                />\n                <TableBody>\n                  {data\n                    .sort(getSorting(order, orderBy))\n                    .slice(page * rowsPerPage, (page * rowsPerPage) + rowsPerPage)\n                    .map((d) => {\n                      const isSelected = this.isSelected(d.id);\n                      return (\n                        <TableRow\n                          className=\"material-table__row\"\n                          role=\"checkbox\"\n                          onClick={event => this.handleClick(event, d.id)}\n                          aria-checked={isSelected}\n                          tabIndex={-1}\n                          key={d.id}\n                          selected={isSelected}\n                        >\n                          <TableCell className=\"material-table__cell\" padding=\"checkbox\">\n                            <Checkbox checked={isSelected} className=\"material-table__checkbox\" />\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                            component=\"th\"\n                            scope=\"row\"\n                            padding=\"none\"\n                          >\n                            {d.name}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.calories}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.fat}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.carbs}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.protein}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 49 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n            <TablePagination\n              component=\"div\"\n              className=\"material-table__pagination\"\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              backIconButtonProps={{ 'aria-label': 'Previous Page' }}\n              nextIconButtonProps={{ 'aria-label': 'Next Page' }}\n              onChangePage={this.handleChangePage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n              rowsPerPageOptions={[5, 10, 15]}\n              dir=\"ltr\"\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}