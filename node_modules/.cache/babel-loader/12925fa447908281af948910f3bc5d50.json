{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/UI/Buttons/components/DefaultButtons.jsx\";\nimport React from 'react';\nimport { Button, ButtonToolbar, Card, CardBody, Col } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nvar DefaultButtons = function DefaultButtons(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, t('ui_elements.buttons.default_buttons')), React.createElement(\"h5\", {\n    className: \"subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Use default button with necessary values of properties\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" color\"), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" outline\"), \" and\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" disabled\"))), React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Modifier color \", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"primary\"), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" success\"), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" warning\"), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" danger\")), React.createElement(\"h5\", {\n    className: \"subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Modifier outline and disabled \", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"true\"), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" false\"))), React.createElement(ButtonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Minimal\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Secondary\"), React.createElement(Button, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Disabled\"), React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(Button, {\n    color: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Success\"), React.createElement(Button, {\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Warning\"), React.createElement(Button, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Danger\"), React.createElement(Button, {\n    color: \"primary\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(Button, {\n    color: \"success\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Success\"), React.createElement(Button, {\n    color: \"warning\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Warning\"), React.createElement(Button, {\n    color: \"danger\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Danger\")))));\n};\n\nDefaultButtons.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(DefaultButtons);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/UI/Buttons/components/DefaultButtons.jsx"],"names":["React","Button","ButtonToolbar","Card","CardBody","Col","withTranslation","PropTypes","DefaultButtons","t","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Button, ButtonToolbar, Card, CardBody, Col,\n} from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst DefaultButtons = ({ t }) => (\n  <Col md={12} lg={6} xl={6}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('ui_elements.buttons.default_buttons')}</h5>\n          <h5 className=\"subhead\">Use default button with necessary values of properties\n            <span className=\"red-text\"> color</span>,\n            <span className=\"red-text\"> outline</span> and\n            <span className=\"red-text\"> disabled</span>\n          </h5>\n        </div>\n        <div className=\"card__title\">\n          <h5 className=\"subhead\">Modifier color <span className=\"red-text\">primary</span>,\n            <span className=\"red-text\"> success</span>,\n            <span className=\"red-text\"> warning</span>,\n            <span className=\"red-text\"> danger</span>\n          </h5>\n          <h5 className=\"subhead\">Modifier outline and disabled <span className=\"red-text\">true</span>,\n            <span className=\"red-text\"> false</span>\n          </h5>\n        </div>\n        <ButtonToolbar>\n          <Button outline>Minimal</Button>\n          <Button>Secondary</Button>\n          <Button disabled>Disabled</Button>\n          <Button color=\"primary\">Primary</Button>\n          <Button color=\"success\">Success</Button>\n          <Button color=\"warning\">Warning</Button>\n          <Button color=\"danger\">Danger</Button>\n          <Button color=\"primary\" outline>Primary</Button>\n          <Button color=\"success\" outline>Success</Button>\n          <Button color=\"warning\" outline>Warning</Button>\n          <Button color=\"danger\" outline>Danger</Button>\n        </ButtonToolbar>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nDefaultButtons.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(DefaultButtons);\n"]},"metadata":{},"sourceType":"module"}