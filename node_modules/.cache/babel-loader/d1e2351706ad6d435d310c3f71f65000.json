{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/shared/components/Panel.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport { Badge, Card, CardBody, Col, Collapse } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport AutorenewIcon from 'mdi-react/AutorenewIcon';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\n\nvar AlertComponent =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AlertComponent, _PureComponent);\n\n  function AlertComponent() {\n    var _this;\n\n    _classCallCheck(this, AlertComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlertComponent).call(this));\n\n    _this.onShow = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.onCollapse = function () {\n      _this.setState(function (prevState) {\n        return {\n          collapse: !prevState.collapse\n        };\n      });\n    };\n\n    _this.onRefresh = function () {\n      // your async logic here\n      _this.setState(function (prevState) {\n        return {\n          refresh: !prevState.refresh\n        };\n      });\n\n      setTimeout(function () {\n        return _this.setState({\n          refresh: false\n        });\n      }, 5000);\n    };\n\n    _this.state = {\n      visible: true,\n      collapse: true,\n      refresh: false\n    };\n    return _this;\n  }\n\n  _createClass(AlertComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          md = _this$props.md,\n          lg = _this$props.lg,\n          xl = _this$props.xl,\n          sm = _this$props.sm,\n          xs = _this$props.xs,\n          color = _this$props.color,\n          divider = _this$props.divider,\n          icon = _this$props.icon,\n          title = _this$props.title,\n          label = _this$props.label,\n          subhead = _this$props.subhead,\n          before = _this$props.before,\n          panelClass = _this$props.panelClass,\n          children = _this$props.children;\n      var _this$state = this.state,\n          collapse = _this$state.collapse,\n          refresh = _this$state.refresh,\n          visible = _this$state.visible;\n\n      if (visible) {\n        return React.createElement(Col, {\n          md: md,\n          lg: lg,\n          xl: xl,\n          sm: sm,\n          xs: xs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"panel\".concat(color ? \" panel--\".concat(color) : '', \"\\n            \").concat(divider ? ' panel--divider' : '').concat(collapse ? '' : ' panel--collapse', \" \").concat(panelClass),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          className: \"panel__body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, refresh ? React.createElement(\"div\", {\n          className: \"panel__refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(LoadingIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })) : '', React.createElement(\"div\", {\n          className: \"panel__btns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"panel__btn\",\n          type: \"button\",\n          onClick: this.onCollapse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(MinusIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"panel__btn\",\n          type: \"button\",\n          onClick: this.onRefresh,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(AutorenewIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"panel__btn\",\n          type: \"button\",\n          onClick: this.onDismiss,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"panel__title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"bold-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, icon ? React.createElement(\"span\", {\n          className: \"panel__icon lnr lnr-\".concat(icon),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }) : '', title, React.createElement(Badge, {\n          className: \"panel__label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, label)), React.createElement(\"h5\", {\n          className: \"subhead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, subhead)), React.createElement(Collapse, {\n          isOpen: collapse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"panel__content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, children)))), before);\n      }\n\n      return '';\n    }\n  }]);\n\n  return AlertComponent;\n}(PureComponent);\n\nAlertComponent.propTypes = {\n  divider: PropTypes.bool,\n  color: PropTypes.string,\n  title: PropTypes.string,\n  subhead: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  md: PropTypes.number,\n  lg: PropTypes.number,\n  xl: PropTypes.number,\n  sm: PropTypes.number,\n  xs: PropTypes.number,\n  before: PropTypes.element,\n  panelClass: PropTypes.string\n};\nAlertComponent.defaultProps = {\n  divider: false,\n  color: '',\n  title: '',\n  subhead: '',\n  label: '',\n  icon: '',\n  md: 0,\n  lg: 0,\n  xl: 0,\n  sm: 0,\n  xs: 0,\n  before: null,\n  panelClass: ''\n};\nexport { AlertComponent as default };\nexport var PanelTitle = function PanelTitle(_ref) {\n  var title = _ref.title;\n  return React.createElement(\"div\", {\n    className: \"panel__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, title));\n};","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/shared/components/Panel.jsx"],"names":["React","PureComponent","Badge","Card","CardBody","Col","Collapse","PropTypes","CloseIcon","MinusIcon","AutorenewIcon","LoadingIcon","AlertComponent","onShow","setState","visible","onDismiss","onCollapse","prevState","collapse","onRefresh","refresh","setTimeout","state","props","md","lg","xl","sm","xs","color","divider","icon","title","label","subhead","before","panelClass","children","propTypes","bool","string","number","element","defaultProps","PanelTitle"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport {\n  Badge, Card, CardBody, Col, Collapse,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport AutorenewIcon from 'mdi-react/AutorenewIcon';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\n\nexport default class AlertComponent extends PureComponent {\n  static propTypes = {\n    divider: PropTypes.bool,\n    color: PropTypes.string,\n    title: PropTypes.string,\n    subhead: PropTypes.string,\n    label: PropTypes.string,\n    icon: PropTypes.string,\n    md: PropTypes.number,\n    lg: PropTypes.number,\n    xl: PropTypes.number,\n    sm: PropTypes.number,\n    xs: PropTypes.number,\n    before: PropTypes.element,\n    panelClass: PropTypes.string,\n  };\n\n  static defaultProps = {\n    divider: false,\n    color: '',\n    title: '',\n    subhead: '',\n    label: '',\n    icon: '',\n    md: 0,\n    lg: 0,\n    xl: 0,\n    sm: 0,\n    xs: 0,\n    before: null,\n    panelClass: '',\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      visible: true,\n      collapse: true,\n      refresh: false,\n    };\n  }\n\n  onShow = () => {\n    this.setState({ visible: true });\n  };\n\n  onDismiss = () => {\n    this.setState({ visible: false });\n  };\n\n  onCollapse = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  onRefresh = () => {\n    // your async logic here\n    this.setState(prevState => ({ refresh: !prevState.refresh }));\n    setTimeout(() => this.setState({ refresh: false }), 5000);\n  };\n\n  render() {\n    const {\n      md, lg, xl, sm, xs, color, divider, icon, title, label, subhead, before,\n      panelClass, children,\n    } = this.props;\n\n    const { collapse, refresh, visible } = this.state;\n\n    if (visible) {\n      return (\n        <Col md={md} lg={lg} xl={xl} sm={sm} xs={xs}>\n          <Card\n            className={`panel${color ? ` panel--${color}` : ''}\n            ${divider ? ' panel--divider' : ''}${collapse ? '' : ' panel--collapse'} ${panelClass}`}\n          >\n            <CardBody className=\"panel__body\">\n              {refresh ? <div className=\"panel__refresh\"><LoadingIcon /></div> : ''}\n              <div className=\"panel__btns\">\n                <button className=\"panel__btn\" type=\"button\" onClick={this.onCollapse}><MinusIcon /></button>\n                <button className=\"panel__btn\" type=\"button\" onClick={this.onRefresh}><AutorenewIcon /></button>\n                <button className=\"panel__btn\" type=\"button\" onClick={this.onDismiss}><CloseIcon /></button>\n              </div>\n              <div className=\"panel__title\">\n                <h5 className=\"bold-text\">\n                  {icon ? <span className={`panel__icon lnr lnr-${icon}`} /> : ''}\n                  {title}\n                  <Badge className=\"panel__label\">{label}</Badge>\n                </h5>\n                <h5 className=\"subhead\">{subhead}</h5>\n              </div>\n              <Collapse isOpen={collapse}>\n                <div className=\"panel__content\">\n                  {children}\n                </div>\n              </Collapse>\n            </CardBody>\n          </Card>\n          {before}\n        </Col>\n      );\n    }\n\n    return '';\n  }\n}\n\nexport const PanelTitle = ({ title }) => (\n  <div className=\"panel__title\">\n    <h5 className=\"bold-text\">\n      {title}\n    </h5>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}