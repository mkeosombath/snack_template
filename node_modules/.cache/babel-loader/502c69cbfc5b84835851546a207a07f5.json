{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/Dashboards/CryptoTableEdit/index.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TopTenEditForm from './components/TopTenEditForm';\nimport { changeCryptoTableData, loadCryptoTableData } from '../../../redux/actions/cryptoTableActions';\n\nvar CryptoDashboardEdit =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CryptoDashboardEdit, _PureComponent);\n\n  function CryptoDashboardEdit() {\n    var _this;\n\n    _classCallCheck(this, CryptoDashboardEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CryptoDashboardEdit).call(this));\n\n    _this.handleSubmit = function (formValues) {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          match = _this$props.match;\n      dispatch(changeCryptoTableData(formValues, match.params.index));\n\n      _this.setState({\n        redirect: true\n      });\n    };\n\n    _this.state = {\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(CryptoDashboardEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          dispatch = _this$props2.dispatch,\n          match = _this$props2.match;\n      dispatch(loadCryptoTableData(match.params.index));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var redirect = this.state.redirect;\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard_crypto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Container, {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(TopTenEditForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CryptoDashboardEdit;\n}(PureComponent);\n\nCryptoDashboardEdit.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cryptoTable: state.cryptoTable\n  };\n};\n\nexport default connect(mapStateToProps)(CryptoDashboardEdit);","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/Dashboards/CryptoTableEdit/index.jsx"],"names":["React","PureComponent","Container","Row","connect","Redirect","PropTypes","TopTenEditForm","changeCryptoTableData","loadCryptoTableData","CryptoDashboardEdit","handleSubmit","formValues","props","dispatch","match","params","index","setState","redirect","state","propTypes","func","isRequired","mapStateToProps","cryptoTable"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,2CAA3D;;IAEMC,mB;;;;;AAKJ,iCAAc;AAAA;;AAAA;;AACZ;;AADY,UAYdC,YAZc,GAYC,UAACC,UAAD,EAAgB;AAAA,wBACD,MAAKC,KADJ;AAAA,UACrBC,QADqB,eACrBA,QADqB;AAAA,UACXC,KADW,eACXA,KADW;AAE7BD,MAAAA,QAAQ,CAACN,qBAAqB,CAACI,UAAD,EAAaG,KAAK,CAACC,MAAN,CAAaC,KAA1B,CAAtB,CAAR;;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAhBa;;AAEZ,UAAKC,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFY;AAKb;;;;wCAEmB;AAAA,yBACU,KAAKN,KADf;AAAA,UACVC,QADU,gBACVA,QADU;AAAA,UACAC,KADA,gBACAA,KADA;AAElBD,MAAAA,QAAQ,CAACL,mBAAmB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB,CAAR;AACD;;;6BAQQ;AAAA,UACCE,QADD,GACc,KAAKC,KADnB,CACCD,QADD;;AAGP,UAAIA,QAAJ,EAAc;AACZ,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKR,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;;;;EArC+BV,a;;AAA5BS,mB,CACGW,S,GAAY;AACjBP,EAAAA,QAAQ,EAAER,SAAS,CAACgB,IAAV,CAAeC;AADR,C;;AAuCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,KAAK;AAAA,SAAK;AAChCK,IAAAA,WAAW,EAAEL,KAAK,CAACK;AADa,GAAL;AAAA,CAA7B;;AAIA,eAAerB,OAAO,CAACoB,eAAD,CAAP,CAAyBd,mBAAzB,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TopTenEditForm from './components/TopTenEditForm';\nimport { changeCryptoTableData, loadCryptoTableData } from '../../../redux/actions/cryptoTableActions';\n\nclass CryptoDashboardEdit extends PureComponent {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch, match } = this.props;\n    dispatch(loadCryptoTableData(match.params.index));\n  }\n\n  handleSubmit = (formValues) => {\n    const { dispatch, match } = this.props;\n    dispatch(changeCryptoTableData(formValues, match.params.index));\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    const { redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to=\"/dashboard_crypto\" />;\n    }\n\n    return (\n      <Container className=\"dashboard\">\n        <Row>\n          <TopTenEditForm onSubmit={this.handleSubmit} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cryptoTable: state.cryptoTable,\n});\n\nexport default connect(mapStateToProps)(CryptoDashboardEdit);\n"]},"metadata":{},"sourceType":"module"}