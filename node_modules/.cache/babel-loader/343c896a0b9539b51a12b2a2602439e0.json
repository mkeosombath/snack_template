{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/shared/components/form/SketchColorPicker.jsx\";\nimport React, { PureComponent } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nvar SketchColorPickerField =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SketchColorPickerField, _PureComponent);\n\n  function SketchColorPickerField() {\n    var _this;\n\n    _classCallCheck(this, SketchColorPickerField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SketchColorPickerField).call(this));\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.setState(function (prevState) {\n        return {\n          displayColorPicker: !prevState.displayColorPicker,\n          active: !prevState.active\n        };\n      });\n    };\n\n    _this.handleChange = function (color) {\n      var onChange = _this.props.onChange;\n\n      _this.setState({\n        color: color.hex,\n        rgb: color.rgb\n      });\n\n      onChange(color);\n    };\n\n    _this.state = {\n      displayColorPicker: false,\n      color: '#ff4861',\n      rgb: {\n        r: 246,\n        g: 129,\n        b: 110,\n        a: 1\n      },\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(SketchColorPickerField, [{\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      var _this$state = this.state,\n          active = _this$state.active,\n          color = _this$state.color,\n          displayColorPicker = _this$state.displayColorPicker,\n          rgb = _this$state.rgb;\n      return React.createElement(\"div\", {\n        className: \"color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"color-picker__button\".concat(active ? ' active' : ''),\n        onClick: this.handleClick,\n        id: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-picker__color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, color), React.createElement(\"div\", {\n        className: \"color-picker__color-view\",\n        style: {\n          backgroundColor: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Popover, {\n        isOpen: displayColorPicker,\n        target: name,\n        placement: \"bottom\",\n        className: \"color-picker__popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(SketchPicker, {\n        color: rgb,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SketchColorPickerField;\n}(PureComponent);\n\nSketchColorPickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nvar renderSketchColorPickerField = function renderSketchColorPickerField(props) {\n  var input = props.input,\n      meta = props.meta;\n  return React.createElement(\"div\", {\n    className: \"form__form-group-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(SketchColorPickerField, Object.assign({}, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), meta.touched && meta.error && React.createElement(\"span\", {\n    className: \"form__form-group-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, meta.error));\n};\n\nrenderSketchColorPickerField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderSketchColorPickerField.defaultProps = {\n  meta: null\n};\nexport default renderSketchColorPickerField;","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/shared/components/form/SketchColorPicker.jsx"],"names":["React","PureComponent","SketchPicker","Popover","PropTypes","SketchColorPickerField","handleClick","e","preventDefault","setState","prevState","displayColorPicker","active","handleChange","color","onChange","props","hex","rgb","state","r","g","b","a","name","backgroundColor","propTypes","func","isRequired","string","renderSketchColorPickerField","input","meta","touched","error","shape","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass SketchColorPickerField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      displayColorPicker: false,\n      color: '#ff4861',\n      rgb: {\n        r: 246, g: 129, b: 110, a: 1,\n      },\n      active: false,\n    };\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ displayColorPicker: !prevState.displayColorPicker, active: !prevState.active }));\n  };\n\n  handleChange = (color) => {\n    const { onChange } = this.props;\n    this.setState({ color: color.hex, rgb: color.rgb });\n    onChange(color);\n  };\n\n  render() {\n    const { name } = this.props;\n    const {\n      active, color, displayColorPicker, rgb,\n    } = this.state;\n\n    return (\n      <div className=\"color-picker\">\n        <button\n          type=\"button\"\n          className={`color-picker__button${active ? ' active' : ''}`}\n          onClick={this.handleClick}\n          id={name}\n        >\n          <p className=\"color-picker__color\">{color}</p>\n          <div className=\"color-picker__color-view\" style={{ backgroundColor: color }} />\n        </button>\n        <Popover\n          isOpen={displayColorPicker}\n          target={name}\n          placement=\"bottom\"\n          className=\"color-picker__popover\"\n        >\n          <SketchPicker\n            color={rgb}\n            onChange={this.handleChange}\n          />\n        </Popover>\n      </div>\n    );\n  }\n}\n\nconst renderSketchColorPickerField = (props) => {\n  const { input, meta } = props;\n  return (\n    <div className=\"form__form-group-input-wrap\">\n      <SketchColorPickerField\n        {...input}\n      />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderSketchColorPickerField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n};\n\nrenderSketchColorPickerField.defaultProps = {\n  meta: null,\n};\n\nexport default renderSketchColorPickerField;\n"]},"metadata":{},"sourceType":"module"}