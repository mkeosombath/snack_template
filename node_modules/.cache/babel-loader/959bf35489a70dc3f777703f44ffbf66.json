{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/shared/components/form/MultiSelect.jsx\";\nimport React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nvar MultiSelectField =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MultiSelectField, _PureComponent);\n\n  function MultiSelectField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MultiSelectField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MultiSelectField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (value) {\n      var onChange = _this.props.onChange;\n      onChange(value);\n    };\n\n    return _this;\n  }\n\n  _createClass(MultiSelectField, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          name = _this$props.name,\n          placeholder = _this$props.placeholder,\n          options = _this$props.options;\n      return React.createElement(Select, {\n        isMulti: true,\n        name: name,\n        value: value,\n        onChange: this.handleChange,\n        options: options,\n        clearable: false,\n        closeOnSelect: false,\n        removeSelected: false,\n        className: \"react-select\",\n        placeholder: placeholder,\n        classNamePrefix: \"react-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MultiSelectField;\n}(PureComponent);\n\nMultiSelectField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  }))]).isRequired\n};\nMultiSelectField.defaultProps = {\n  placeholder: '',\n  options: []\n};\n\nvar renderMultiSelectField = function renderMultiSelectField(props) {\n  var input = props.input,\n      meta = props.meta,\n      options = props.options,\n      placeholder = props.placeholder;\n  return React.createElement(\"div\", {\n    className: \"form__form-group-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(MultiSelectField, Object.assign({}, input, {\n    options: options,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), meta.touched && meta.error && React.createElement(\"span\", {\n    className: \"form__form-group-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, meta.error));\n};\n\nrenderMultiSelectField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })),\n  placeholder: PropTypes.string\n};\nrenderMultiSelectField.defaultProps = {\n  meta: null,\n  options: [],\n  placeholder: ''\n};\nexport default renderMultiSelectField;","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/shared/components/form/MultiSelect.jsx"],"names":["React","PureComponent","Select","PropTypes","MultiSelectField","handleChange","value","onChange","props","name","placeholder","options","propTypes","func","isRequired","string","arrayOf","shape","label","oneOfType","defaultProps","renderMultiSelectField","input","meta","touched","error","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,gB;;;;;;;;;;;;;;;;;;UAuBJC,Y,GAAe,UAACC,KAAD,EAAW;AAAA,UAChBC,QADgB,GACH,MAAKC,KADF,CAChBD,QADgB;AAExBA,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,K;;;;;;;6BAEQ;AAAA,wBAGH,KAAKE,KAHF;AAAA,UAELF,KAFK,eAELA,KAFK;AAAA,UAEEG,IAFF,eAEEA,IAFF;AAAA,UAEQC,WAFR,eAEQA,WAFR;AAAA,UAEqBC,OAFrB,eAEqBA,OAFrB;AAKP,aACE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,IAAI,EAAEF,IAFR;AAGE,QAAA,KAAK,EAAEH,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKD,YAJjB;AAKE,QAAA,OAAO,EAAEM,OALX;AAME,QAAA,SAAS,EAAE,KANb;AAOE,QAAA,aAAa,EAAE,KAPjB;AAQE,QAAA,cAAc,EAAE,KARlB;AASE,QAAA,SAAS,EAAC,cATZ;AAUE,QAAA,WAAW,EAAED,WAVf;AAWE,QAAA,eAAe,EAAC,cAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAeD;;;;EAhD4BT,a;;AAAzBG,gB,CACGQ,S,GAAY;AACjBL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,IAAV,CAAeC,UADR;AAEjBL,EAAAA,IAAI,EAAEN,SAAS,CAACY,MAAV,CAAiBD,UAFN;AAGjBJ,EAAAA,WAAW,EAAEP,SAAS,CAACY,MAHN;AAIjBJ,EAAAA,OAAO,EAAER,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgB;AACzCX,IAAAA,KAAK,EAAEH,SAAS,CAACY,MADwB;AAEzCG,IAAAA,KAAK,EAAEf,SAAS,CAACY;AAFwB,GAAhB,CAAlB,CAJQ;AAQjBT,EAAAA,KAAK,EAAEH,SAAS,CAACgB,SAAV,CAAoB,CACzBhB,SAAS,CAACY,MADe,EAEzBZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgB;AAChCX,IAAAA,KAAK,EAAEH,SAAS,CAACY,MADe;AAEhCG,IAAAA,KAAK,EAAEf,SAAS,CAACY;AAFe,GAAhB,CAAlB,CAFyB,CAApB,EAMJD;AAdc,C;AADfV,gB,CAkBGgB,Y,GAAe;AACpBV,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,OAAO,EAAE;AAFW,C;;AAiCxB,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACb,KAAD,EAAW;AAAA,MAEtCc,KAFsC,GAGpCd,KAHoC,CAEtCc,KAFsC;AAAA,MAE/BC,IAF+B,GAGpCf,KAHoC,CAE/Be,IAF+B;AAAA,MAEzBZ,OAFyB,GAGpCH,KAHoC,CAEzBG,OAFyB;AAAA,MAEhBD,WAFgB,GAGpCF,KAHoC,CAEhBE,WAFgB;AAIxC,SACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD,oBACMY,KADN;AAEE,IAAA,OAAO,EAAEX,OAFX;AAGE,IAAA,WAAW,EAAED,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAMGa,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,IAA8B;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CF,IAAI,CAACE,KAA/C,CANjC,CADF;AAUD,CAdD;;AAgBAJ,sBAAsB,CAACT,SAAvB,GAAmC;AACjCU,EAAAA,KAAK,EAAEnB,SAAS,CAACc,KAAV,CAAgB;AACrBV,IAAAA,QAAQ,EAAEJ,SAAS,CAACU,IADC;AAErBJ,IAAAA,IAAI,EAAEN,SAAS,CAACY;AAFK,GAAhB,EAGJD,UAJ8B;AAKjCS,EAAAA,IAAI,EAAEpB,SAAS,CAACc,KAAV,CAAgB;AACpBO,IAAAA,OAAO,EAAErB,SAAS,CAACuB,IADC;AAEpBD,IAAAA,KAAK,EAAEtB,SAAS,CAACY;AAFG,GAAhB,CAL2B;AASjCJ,EAAAA,OAAO,EAAER,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgB;AACzCX,IAAAA,KAAK,EAAEH,SAAS,CAACY,MADwB;AAEzCG,IAAAA,KAAK,EAAEf,SAAS,CAACY;AAFwB,GAAhB,CAAlB,CATwB;AAajCL,EAAAA,WAAW,EAAEP,SAAS,CAACY;AAbU,CAAnC;AAgBAM,sBAAsB,CAACD,YAAvB,GAAsC;AACpCG,EAAAA,IAAI,EAAE,IAD8B;AAEpCZ,EAAAA,OAAO,EAAE,EAF2B;AAGpCD,EAAAA,WAAW,EAAE;AAHuB,CAAtC;AAMA,eAAeW,sBAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nclass MultiSelectField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })),\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n      })),\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    placeholder: '',\n    options: [],\n  };\n\n  handleChange = (value) => {\n    const { onChange } = this.props;\n    onChange(value);\n  };\n\n  render() {\n    const {\n      value, name, placeholder, options,\n    } = this.props;\n\n    return (\n      <Select\n        isMulti\n        name={name}\n        value={value}\n        onChange={this.handleChange}\n        options={options}\n        clearable={false}\n        closeOnSelect={false}\n        removeSelected={false}\n        className=\"react-select\"\n        placeholder={placeholder}\n        classNamePrefix=\"react-select\"\n      />\n    );\n  }\n}\n\nconst renderMultiSelectField = (props) => {\n  const {\n    input, meta, options, placeholder,\n  } = props;\n  return (\n    <div className=\"form__form-group-input-wrap\">\n      <MultiSelectField\n        {...input}\n        options={options}\n        placeholder={placeholder}\n      />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderMultiSelectField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  placeholder: PropTypes.string,\n};\n\nrenderMultiSelectField.defaultProps = {\n  meta: null,\n  options: [],\n  placeholder: '',\n};\n\nexport default renderMultiSelectField;\n"]},"metadata":{},"sourceType":"module"}