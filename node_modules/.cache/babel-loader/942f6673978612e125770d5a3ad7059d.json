{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Charts/ChartJs/index.jsx\";\nimport React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport PointSizes from './components/PointSizes';\nimport RandomAnimatedLine from './components/RandomAnimatedLine';\nimport RandomAnimatedBars from './components/RandomAnimatedBars';\nimport PolarArea from './components/PolarArea';\nimport DynamiclyRefreshedDoughnut from './components/DynamiclyRefreshedDoughnut';\nimport LegendHandlers from './components/LegendHandlers';\n\nvar ChartsJS = function ChartsJS(_ref) {\n  var t = _ref.t;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, t('charts.react_chartjs.title')), React.createElement(\"h3\", {\n    className: \"page-subhead subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Use this elements, if you want to show some hints or additional information\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(PointSizes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(RandomAnimatedLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(RandomAnimatedBars, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(PolarArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(DynamiclyRefreshedDoughnut, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(LegendHandlers, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nChartsJS.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(ChartsJS);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Charts/ChartJs/index.jsx"],"names":["React","Col","Container","Row","withTranslation","PropTypes","PointSizes","RandomAnimatedLine","RandomAnimatedBars","PolarArea","DynamiclyRefreshedDoughnut","LegendHandlers","ChartsJS","t","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,0BAAP,MAAuC,yCAAvC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SACf,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,CAAC,CAAC,4BAAD,CAA7B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAFF,CADF,CADF,EASE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CATF,CADe;AAAA,CAAjB;;AAqBAD,QAAQ,CAACE,SAAT,GAAqB;AACnBD,EAAAA,CAAC,EAAER,SAAS,CAACU,IAAV,CAAeC;AADC,CAArB;AAIA,eAAeZ,eAAe,CAAC,QAAD,CAAf,CAA0BQ,QAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport PointSizes from './components/PointSizes';\nimport RandomAnimatedLine from './components/RandomAnimatedLine';\nimport RandomAnimatedBars from './components/RandomAnimatedBars';\nimport PolarArea from './components/PolarArea';\nimport DynamiclyRefreshedDoughnut from './components/DynamiclyRefreshedDoughnut';\nimport LegendHandlers from './components/LegendHandlers';\n\nconst ChartsJS = ({ t }) => (\n  <Container>\n    <Row>\n      <Col md={12}>\n        <h3 className=\"page-title\">{t('charts.react_chartjs.title')}</h3>\n        <h3 className=\"page-subhead subhead\">Use this elements, if you want to show some hints or additional\n              information\n        </h3>\n      </Col>\n    </Row>\n    <Row>\n      <PointSizes />\n      <RandomAnimatedLine />\n      <RandomAnimatedBars />\n      <PolarArea />\n      <DynamiclyRefreshedDoughnut />\n      <LegendHandlers />\n    </Row>\n  </Container>\n);\n\nChartsJS.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(ChartsJS);\n"]},"metadata":{},"sourceType":"module"}