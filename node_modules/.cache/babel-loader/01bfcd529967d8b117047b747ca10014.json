{"ast":null,"code":"import _toConsumableArray from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/Tables/DataTable/components/DataTable.jsx\";\n\n/* eslint-disable react/no-unused-state,react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport DataPaginationTable from '../../../../shared/components/table/DataPaginationTable';\nimport Pagination from '../../../../shared/components/pagination/Pagination';\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DataTable, _PureComponent);\n\n  function DataTable() {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTable).call(this));\n\n    _this.onChangePage = function (pageOfItems) {\n      var _this$state = _this.state,\n          rows = _this$state.rows,\n          itemsToShow = _this$state.itemsToShow;\n\n      if (pageOfItems) {\n        var rowsToShow = _this.filterRows(rows, pageOfItems, itemsToShow);\n\n        _this.setState({\n          rowsToShow: rowsToShow,\n          pageOfItems: pageOfItems\n        });\n      }\n    };\n\n    _this.getRandomDate = function (start, end) {\n      return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n    };\n\n    _this.createRows = function (numberOfRows) {\n      var rows = [];\n\n      for (var i = 1; i < numberOfRows + 1; i += 1) {\n        rows.push({\n          id: i,\n          first: ['Maria', 'Bobby  ', 'Alexander'][Math.floor(Math.random() * 3)],\n          last: ['Morisson', 'Brown  ', 'Medinberg'][Math.floor(Math.random() * 3)],\n          user: ['@dragon', '@hamster', '@cat'][Math.floor(Math.random() * 3)],\n          age: Math.min(100, Math.round(Math.random() * 30) + 20),\n          date: _this.getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n          location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor(Math.random() * 4)],\n          work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor(Math.random() * 5)]\n        });\n      }\n\n      return rows;\n    };\n\n    _this.filterRows = function (originalRows, pageNumber, rowsOnPage) {\n      var rowsFrom = rowsOnPage * (pageNumber - 1);\n      var rowsTo = rowsFrom + rowsOnPage;\n      return originalRows.slice(rowsFrom, rowsTo);\n    };\n\n    _this.onSorting = function (sortColumn, sortDirection) {\n      var comparer = function comparer(a, b) {\n        if (sortDirection === 'ASC') {\n          return a[sortColumn] > b[sortColumn] ? 1 : -1;\n        }\n\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      };\n\n      var _this$state2 = _this.state,\n          rows = _this$state2.rows,\n          pageOfItems = _this$state2.pageOfItems,\n          itemsToShow = _this$state2.itemsToShow;\n\n      if (sortDirection !== 'NONE') {\n        var _sortRows = _toConsumableArray(rows).sort(comparer);\n\n        _sortRows = _this.filterRows(_sortRows, pageOfItems, itemsToShow);\n\n        _this.setState({\n          rowsToShow: _sortRows\n        });\n\n        return _sortRows;\n      }\n\n      var sortRows = _this.filterRows(rows, pageOfItems, itemsToShow);\n\n      _this.setState({\n        rowsToShow: sortRows\n      });\n\n      return sortRows;\n    };\n\n    _this.heads = [{\n      key: 'id',\n      name: '#',\n      width: 80\n    }, {\n      key: 'first',\n      name: 'First Name',\n      sortable: true\n    }, {\n      key: 'last',\n      name: 'Last Name',\n      sortable: true\n    }, {\n      key: 'user',\n      name: 'Username',\n      sortable: true\n    }, {\n      key: 'age',\n      name: 'Age',\n      sortable: true\n    }, {\n      key: 'date',\n      name: 'Date',\n      sortable: true\n    }, {\n      key: 'location',\n      name: 'Location',\n      sortable: true\n    }, {\n      key: 'work',\n      name: 'Work',\n      sortable: true\n    }];\n    var initialPageNumber = 1;\n    var initialRowsCount = 10;\n    var minRows = 20;\n    var maxRows = 41;\n    var rowsCount = Math.random() * (maxRows - minRows);\n\n    var _originalRows = _this.createRows(rowsCount + minRows);\n\n    var currentPageRows = _this.filterRows(_originalRows, initialPageNumber, initialRowsCount);\n\n    _this.state = {\n      rows: _originalRows,\n      rowsToShow: currentPageRows,\n      pageOfItems: initialPageNumber,\n      itemsToShow: initialRowsCount\n    };\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          rows = _this$state3.rows,\n          itemsToShow = _this$state3.itemsToShow,\n          pageOfItems = _this$state3.pageOfItems,\n          rowsToShow = _this$state3.rowsToShow;\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"data table\"), React.createElement(\"h5\", {\n        className: \"subhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Use table with column's option \", React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"sortable\"))), React.createElement(DataPaginationTable, {\n        heads: this.heads,\n        rows: rowsToShow,\n        onSorting: this.onSorting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: rows.length,\n        itemsToShow: itemsToShow,\n        pageOfItems: pageOfItems,\n        onChangePage: this.onChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DataTable;\n}(PureComponent);\n\nexport { DataTable as default };","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/Tables/DataTable/components/DataTable.jsx"],"names":["React","PureComponent","Card","CardBody","Col","DataPaginationTable","Pagination","DataTable","onChangePage","pageOfItems","state","rows","itemsToShow","rowsToShow","filterRows","setState","getRandomDate","start","end","Date","getTime","Math","random","toLocaleDateString","createRows","numberOfRows","i","push","id","first","floor","last","user","age","min","round","date","location","work","originalRows","pageNumber","rowsOnPage","rowsFrom","rowsTo","slice","onSorting","sortColumn","sortDirection","comparer","a","b","sortRows","sort","heads","key","name","width","sortable","initialPageNumber","initialRowsCount","minRows","maxRows","rowsCount","currentPageRows","length"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state,react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport DataPaginationTable from '../../../../shared/components/table/DataPaginationTable';\nimport Pagination from '../../../../shared/components/pagination/Pagination';\n\nexport default class DataTable extends PureComponent {\n  constructor() {\n    super();\n    this.heads = [\n      {\n        key: 'id',\n        name: '#',\n        width: 80,\n      },\n      {\n        key: 'first',\n        name: 'First Name',\n        sortable: true,\n      },\n      {\n        key: 'last',\n        name: 'Last Name',\n        sortable: true,\n      },\n      {\n        key: 'user',\n        name: 'Username',\n        sortable: true,\n      },\n      {\n        key: 'age',\n        name: 'Age',\n        sortable: true,\n      },\n      {\n        key: 'date',\n        name: 'Date',\n        sortable: true,\n      },\n      {\n        key: 'location',\n        name: 'Location',\n        sortable: true,\n      },\n      {\n        key: 'work',\n        name: 'Work',\n        sortable: true,\n      },\n    ];\n\n    const initialPageNumber = 1;\n    const initialRowsCount = 10;\n\n    const minRows = 20;\n    const maxRows = 41;\n    const rowsCount = Math.random() * (maxRows - minRows);\n\n    const originalRows = this.createRows(rowsCount + minRows);\n    const currentPageRows = this.filterRows(originalRows, initialPageNumber, initialRowsCount);\n\n    this.state = {\n      rows: originalRows,\n      rowsToShow: currentPageRows,\n      pageOfItems: initialPageNumber,\n      itemsToShow: initialRowsCount,\n    };\n  }\n\n  onChangePage = (pageOfItems) => {\n    const { rows, itemsToShow } = this.state;\n    if (pageOfItems) {\n      const rowsToShow = this.filterRows(rows, pageOfItems, itemsToShow);\n      this.setState({ rowsToShow, pageOfItems });\n    }\n  };\n\n  getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  createRows = (numberOfRows) => {\n    const rows = [];\n    for (let i = 1; i < numberOfRows + 1; i += 1) {\n      rows.push({\n        id: i,\n        first: ['Maria', 'Bobby  ', 'Alexander'][Math.floor((Math.random() * 3))],\n        last: ['Morisson', 'Brown  ', 'Medinberg'][Math.floor((Math.random() * 3))],\n        user: ['@dragon', '@hamster', '@cat'][Math.floor((Math.random() * 3))],\n        age: Math.min(100, Math.round(Math.random() * 30) + 20),\n        date: this.getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n        location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor((Math.random() * 4))],\n        work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor((Math.random() * 5))],\n      });\n    }\n    return rows;\n  };\n\n  filterRows = (originalRows, pageNumber, rowsOnPage) => {\n    const rowsFrom = rowsOnPage * (pageNumber - 1);\n    const rowsTo = rowsFrom + rowsOnPage;\n    return originalRows.slice(rowsFrom, rowsTo);\n  };\n\n  onSorting = (sortColumn, sortDirection) => {\n    const comparer = (a, b) => {\n      if (sortDirection === 'ASC') {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      }\n      return a[sortColumn] < b[sortColumn] ? 1 : -1;\n    };\n    const {\n      rows, pageOfItems, itemsToShow,\n    } = this.state;\n    if (sortDirection !== 'NONE') {\n      let sortRows = [...rows].sort(comparer);\n      sortRows = this.filterRows(sortRows, pageOfItems, itemsToShow);\n      this.setState({ rowsToShow: sortRows });\n      return sortRows;\n    }\n    const sortRows = this.filterRows(rows, pageOfItems, itemsToShow);\n    this.setState({ rowsToShow: sortRows });\n    return sortRows;\n  };\n\n  render() {\n    const {\n      rows, itemsToShow, pageOfItems, rowsToShow,\n    } = this.state;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">data table</h5>\n              <h5 className=\"subhead\">Use table with column's option <span className=\"red-text\">sortable</span></h5>\n            </div>\n            <DataPaginationTable\n              heads={this.heads}\n              rows={rowsToShow}\n              onSorting={this.onSorting}\n            />\n            <Pagination\n              itemsCount={rows.length}\n              itemsToShow={itemsToShow}\n              pageOfItems={pageOfItems}\n              onChangePage={this.onChangePage}\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}