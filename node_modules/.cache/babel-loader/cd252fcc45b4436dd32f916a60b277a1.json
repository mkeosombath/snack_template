{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Charts/ReactVis/components/Plots.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { FlexibleWidthXYPlot, HorizontalGridLines, LineSeries, VerticalRectSeries, XAxis, YAxis } from 'react-vis';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nfunction getRandomSeriesData(total) {\n  var result = [];\n  var lastY = Math.random() * 40;\n  var y;\n  var firstY = lastY;\n\n  for (var i = 0; i < Math.max(total, 3); i += 1) {\n    y = Math.random() * firstY - firstY / 2 + lastY;\n    result.push({\n      left: i,\n      top: y\n    });\n    lastY = y;\n  }\n\n  return result;\n}\n\nvar Plots =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Plots, _PureComponent);\n\n  function Plots(props) {\n    var _this;\n\n    _classCallCheck(this, Plots);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Plots).call(this, props));\n    var totalValues = 30;\n    _this.state = {\n      series: [{\n        title: 'Apples',\n        disabled: false,\n        data: getRandomSeriesData(totalValues)\n      }, {\n        title: 'Bananas',\n        disabled: false,\n        data: getRandomSeriesData(totalValues)\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Plots, [{\n    key: \"render\",\n    value: function render() {\n      var series = this.state.series;\n      var _this$props = this.props,\n          t = _this$props.t,\n          dir = _this$props.dir;\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        xl: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, t('charts.react_vis.plots'))), React.createElement(\"div\", {\n        className: \"react-vis\",\n        dir: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FlexibleWidthXYPlot, {\n        animation: true,\n        getX: function getX(d) {\n          return d.left;\n        },\n        getY: function getY(d) {\n          return d.top;\n        },\n        xDomain: [0, series[0].data.length - 1],\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(HorizontalGridLines, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        className: \"cool-custom-name\",\n        tickSizeInner: 0,\n        tickSizeOuter: 8,\n        orientation: dir === 'rtl' ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        className: \"even-cooler-custom-name\",\n        tickSizeInner: 0,\n        tickSizeOuter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(VerticalRectSeries, Object.assign({\n        data: series[0].data.map(function (_ref) {\n          var left = _ref.left,\n              top = _ref.top;\n          return {\n            x0: left,\n            left: left + 1,\n            top: top\n          };\n        }),\n        stroke: \"white\"\n      }, series[0].disabled ? {\n        opacity: 0.2\n      } : null, {\n        color: \"#70bbfd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(LineSeries, Object.assign({\n        className: \"react-vis__svg-line\",\n        data: series[1].data,\n        curve: \"curveMonotoneX\"\n      }, series[1].disabled ? {\n        opacity: 0.2\n      } : null, {\n        color: \"#f6da6e\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Plots;\n}(PureComponent);\n\nPlots.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired\n};\nexport default withTranslation('common')(Plots);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Charts/ReactVis/components/Plots.jsx"],"names":["React","PureComponent","Card","CardBody","Col","FlexibleWidthXYPlot","HorizontalGridLines","LineSeries","VerticalRectSeries","XAxis","YAxis","withTranslation","PropTypes","getRandomSeriesData","total","result","lastY","Math","random","y","firstY","i","max","push","left","top","Plots","props","totalValues","state","series","title","disabled","data","t","dir","d","length","map","x0","opacity","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  VerticalRectSeries,\n  XAxis,\n  YAxis,\n} from 'react-vis';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nfunction getRandomSeriesData(total) {\n  const result = [];\n  let lastY = Math.random() * 40;\n  let y;\n  const firstY = lastY;\n  for (let i = 0; i < Math.max(total, 3); i += 1) {\n    y = ((Math.random() * firstY) - (firstY / 2)) + lastY;\n    result.push({\n      left: i,\n      top: y,\n    });\n    lastY = y;\n  }\n  return result;\n}\n\nclass Plots extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    dir: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    const totalValues = 30;\n    this.state = {\n      series: [\n        {\n          title: 'Apples',\n          disabled: false,\n          data: getRandomSeriesData(totalValues),\n        },\n        {\n          title: 'Bananas',\n          disabled: false,\n          data: getRandomSeriesData(totalValues),\n        },\n      ],\n    };\n  }\n\n  render() {\n    const { series } = this.state;\n    const { t, dir } = this.props;\n\n    return (\n      <Col md={12} lg={12} xl={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{t('charts.react_vis.plots')}</h5>\n            </div>\n            <div className=\"react-vis\" dir=\"ltr\">\n              <FlexibleWidthXYPlot\n                animation\n                getX={d => d.left}\n                getY={d => d.top}\n                xDomain={[0, series[0].data.length - 1]}\n                height={300}\n              >\n                <HorizontalGridLines />\n                <YAxis\n                  className=\"cool-custom-name\"\n                  tickSizeInner={0}\n                  tickSizeOuter={8}\n                  orientation={dir === 'rtl' ? 'right' : 'left'}\n                />\n                <XAxis\n                  className=\"even-cooler-custom-name\"\n                  tickSizeInner={0}\n                  tickSizeOuter={8}\n                />\n                <VerticalRectSeries\n                  data={series[0].data.map(({ left, top }) => ({ x0: left, left: left + 1, top }))}\n                  stroke=\"white\"\n                  {...(series[0].disabled ? { opacity: 0.2 } : null)}\n                  color=\"#70bbfd\"\n                />\n                <LineSeries\n                  className=\"react-vis__svg-line\"\n                  data={series[1].data}\n                  curve=\"curveMonotoneX\"\n                  {...(series[1].disabled ? { opacity: 0.2 } : null)}\n                  color=\"#f6da6e\"\n                />\n              </FlexibleWidthXYPlot>\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withTranslation('common')(Plots);\n"]},"metadata":{},"sourceType":"module"}