{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/Maps/GoogleMap/components/MonochromeMap.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { compose, withProps } from 'recompose';\nimport { GoogleMap, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport silverMapStyle from './silverMapStyle.json';\nvar GrayMap = compose(withProps({\n  // generate your API key\n  googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=&v=3.' + 'exp&libraries=geometry,drawing,places',\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    className: \"map\",\n    style: {\n      height: '360px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(function () {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 13,\n    defaultCenter: {\n      lat: 56.009483,\n      lng: 92.8121694\n    },\n    defaultOptions: {\n      styles: silverMapStyle\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n});\n\nvar MonochromeMap = function MonochromeMap(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    xs: 12,\n    md: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, t('maps.google_map.monochrome_map'))), React.createElement(GrayMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};\n\nMonochromeMap.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(MonochromeMap);","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/Maps/GoogleMap/components/MonochromeMap.jsx"],"names":["React","Card","CardBody","Col","compose","withProps","GoogleMap","withGoogleMap","withScriptjs","withTranslation","PropTypes","silverMapStyle","GrayMap","googleMapURL","loadingElement","height","containerElement","mapElement","lat","lng","styles","MonochromeMap","t","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,QAAuD,mBAAvD;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,IAAMC,OAAO,GAAGR,OAAO,CACrBC,SAAS,CAAC;AACR;AACAQ,EAAAA,YAAY,EAAE,sDACZ,uCAHM;AAIRC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR;AAKRC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALV;AAMRE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,CAAD,CADY,EASrBP,YATqB,EAUrBD,aAVqB,CAAP,CAWd;AAAA,SACA,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAE;AAAEW,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAFjB;AAGE,IAAA,cAAc,EAAE;AAAEC,MAAAA,MAAM,EAAET;AAAV,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAAA,CAXc,CAAhB;;AAmBA,IAAMU,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SACpB,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAAC,CAAC,gCAAD,CAA5B,CADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADoB;AAAA,CAAtB;;AAaAD,aAAa,CAACE,SAAd,GAA0B;AACxBD,EAAAA,CAAC,EAAEZ,SAAS,CAACc,IAAV,CAAeC;AADM,CAA1B;AAIA,eAAehB,eAAe,CAAC,QAAD,CAAf,CAA0BY,aAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { compose, withProps } from 'recompose';\nimport { GoogleMap, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport silverMapStyle from './silverMapStyle.json';\n\nconst GrayMap = compose(\n  withProps({\n    // generate your API key\n    googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=&v=3.'\n    + 'exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: '100%' }} />,\n    containerElement: <div className=\"map\" style={{ height: '360px' }} />,\n    mapElement: <div style={{ height: '100%' }} />,\n  }),\n  withScriptjs,\n  withGoogleMap,\n)(() => (\n  <GoogleMap\n    defaultZoom={13}\n    defaultCenter={{ lat: 56.009483, lng: 92.8121694 }}\n    defaultOptions={{ styles: silverMapStyle }}\n  />\n));\n\nconst MonochromeMap = ({ t }) => (\n  <Col xs={12} md={12} lg={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('maps.google_map.monochrome_map')}</h5>\n        </div>\n        <GrayMap />\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nMonochromeMap.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(MonochromeMap);\n"]},"metadata":{},"sourceType":"module"}