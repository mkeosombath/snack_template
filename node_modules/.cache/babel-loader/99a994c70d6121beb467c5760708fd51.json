{"ast":null,"code":"import _toConsumableArray from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Dashboards/Crypto/index.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BTC from './components/BTC';\nimport ETH from './components/ETH';\nimport BCH from './components/BCH';\nimport XRP from './components/XRP';\nimport TradeHistory from './components/TradeHistory';\nimport BtcEth from './components/BtcEth';\nimport CryptotrendsToday from './components/CryptotrendsToday';\nimport TopTen from './components/TopTen';\nimport PlaceOrder from './components/PlaceOrder';\nimport { deleteCryptoTableData } from '../../../redux/actions/cryptoTableActions';\nimport { CryptoTableProps } from '../../../shared/prop-types/TablesProps';\nimport { ThemeProps, RTLProps } from '../../../shared/prop-types/ReducerProps';\n\nvar CryptoDashboard =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CryptoDashboard, _PureComponent);\n\n  function CryptoDashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CryptoDashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CryptoDashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDeleteCryptoTableData = function (index, e) {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          cryptoTable = _this$props.cryptoTable;\n      e.preventDefault();\n\n      var arrayCopy = _toConsumableArray(cryptoTable);\n\n      arrayCopy.splice(index, 1);\n      dispatch(deleteCryptoTableData(arrayCopy));\n    };\n\n    return _this;\n  }\n\n  _createClass(CryptoDashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          cryptoTable = _this$props2.cryptoTable,\n          rtl = _this$props2.rtl,\n          theme = _this$props2.theme;\n      return React.createElement(Container, {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, t('dashboard_crypto.page_title')))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(BTC, {\n        dir: rtl.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(ETH, {\n        dir: rtl.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(BCH, {\n        dir: rtl.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(XRP, {\n        dir: rtl.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(TradeHistory, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(BtcEth, {\n        dir: rtl.direction,\n        theme: theme.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(CryptotrendsToday, {\n        dir: rtl.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(PlaceOrder, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(TopTen, {\n        cryptoTable: cryptoTable,\n        onDeleteCryptoTableData: this.onDeleteCryptoTableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CryptoDashboard;\n}(PureComponent);\n\nCryptoDashboard.propTypes = {\n  t: PropTypes.func.isRequired,\n  cryptoTable: CryptoTableProps.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired,\n  theme: ThemeProps.isRequired\n};\nexport default connect(function (state) {\n  return {\n    cryptoTable: state.cryptoTable.items,\n    rtl: state.rtl,\n    theme: state.theme\n  };\n})(withTranslation('common')(CryptoDashboard));","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Dashboards/Crypto/index.jsx"],"names":["React","PureComponent","Col","Container","Row","withTranslation","connect","PropTypes","BTC","ETH","BCH","XRP","TradeHistory","BtcEth","CryptotrendsToday","TopTen","PlaceOrder","deleteCryptoTableData","CryptoTableProps","ThemeProps","RTLProps","CryptoDashboard","onDeleteCryptoTableData","index","e","props","dispatch","cryptoTable","preventDefault","arrayCopy","splice","t","rtl","theme","direction","className","propTypes","func","isRequired","state","items"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BTC from './components/BTC';\nimport ETH from './components/ETH';\nimport BCH from './components/BCH';\nimport XRP from './components/XRP';\nimport TradeHistory from './components/TradeHistory';\nimport BtcEth from './components/BtcEth';\nimport CryptotrendsToday from './components/CryptotrendsToday';\nimport TopTen from './components/TopTen';\nimport PlaceOrder from './components/PlaceOrder';\nimport { deleteCryptoTableData } from '../../../redux/actions/cryptoTableActions';\nimport { CryptoTableProps } from '../../../shared/prop-types/TablesProps';\nimport { ThemeProps, RTLProps } from '../../../shared/prop-types/ReducerProps';\n\nclass CryptoDashboard extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    cryptoTable: CryptoTableProps.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    rtl: RTLProps.isRequired,\n    theme: ThemeProps.isRequired,\n  };\n\n  onDeleteCryptoTableData = (index, e) => {\n    const { dispatch, cryptoTable } = this.props;\n    e.preventDefault();\n    const arrayCopy = [...cryptoTable];\n    arrayCopy.splice(index, 1);\n    dispatch(deleteCryptoTableData(arrayCopy));\n  };\n\n  render() {\n    const {\n      t, cryptoTable, rtl, theme,\n    } = this.props;\n\n    return (\n      <Container className=\"dashboard\">\n        <Row>\n          <Col md={12}>\n            <h3 className=\"page-title\">{t('dashboard_crypto.page_title')}</h3>\n          </Col>\n        </Row>\n        <Row>\n          <BTC dir={rtl.direction} />\n          <ETH dir={rtl.direction} />\n          <BCH dir={rtl.direction} />\n          <XRP dir={rtl.direction} />\n        </Row>\n        <Row>\n          <TradeHistory />\n          <BtcEth\n            dir={rtl.direction}\n            theme={theme.className}\n          />\n          <CryptotrendsToday dir={rtl.direction} />\n          <PlaceOrder />\n          <TopTen cryptoTable={cryptoTable} onDeleteCryptoTableData={this.onDeleteCryptoTableData} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default connect(state => ({\n  cryptoTable: state.cryptoTable.items,\n  rtl: state.rtl,\n  theme: state.theme,\n}))(withTranslation('common')(CryptoDashboard));\n"]},"metadata":{},"sourceType":"module"}