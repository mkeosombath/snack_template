{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Charts/ReactVis/components/LineSeriesWithManyColors.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, FlexibleWidthXYPlot, YAxis } from 'react-vis';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nvar data = [];\n\nfor (var i = 0; i < 20; i += 1) {\n  var series = [];\n\n  for (var j = 0; j < 100; j += 1) {\n    series.push({\n      x: j,\n      y: (i / 10 + 1) * Math.sin(Math.PI * (i + j) / 50)\n    });\n  }\n\n  data.push({\n    color: i,\n    key: i,\n    data: series,\n    opacity: 0.8\n  });\n}\n\nvar LineSeriesWithManyColors = function LineSeriesWithManyColors(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    xs: 12,\n    md: 12,\n    lg: 12,\n    xl: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, t('charts.react_vis.line_series_with_many_colors'))), React.createElement(\"div\", {\n    className: \"react-vis\",\n    dir: \"ltr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(FlexibleWidthXYPlot, {\n    height: 250,\n    colorType: \"linear\",\n    colorDomain: [0, 9],\n    colorRange: ['#70bbfd', '#c88ffa'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(HorizontalGridLines, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(VerticalGridLines, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), data.map(function (props) {\n    return React.createElement(LineSeries, Object.assign({\n      className: \"react-vis__svg-line\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }))))));\n};\n\nLineSeriesWithManyColors.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(LineSeriesWithManyColors);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Charts/ReactVis/components/LineSeriesWithManyColors.jsx"],"names":["React","Card","CardBody","Col","HorizontalGridLines","LineSeries","VerticalGridLines","XAxis","FlexibleWidthXYPlot","YAxis","withTranslation","PropTypes","data","i","series","j","push","x","y","Math","sin","PI","color","key","opacity","LineSeriesWithManyColors","t","map","props","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, FlexibleWidthXYPlot, YAxis,\n} from 'react-vis';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst data = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  const series = [];\n  for (let j = 0; j < 100; j += 1) {\n    series.push({ x: j, y: ((i / 10) + 1) * Math.sin((Math.PI * (i + j)) / 50) });\n  }\n  data.push({\n    color: i, key: i, data: series, opacity: 0.8,\n  });\n}\n\nconst LineSeriesWithManyColors = ({ t }) => (\n  <Col xs={12} md={12} lg={12} xl={4}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('charts.react_vis.line_series_with_many_colors')}</h5>\n        </div>\n        <div className=\"react-vis\" dir=\"ltr\">\n          <FlexibleWidthXYPlot\n            height={250}\n            colorType=\"linear\"\n            colorDomain={[0, 9]}\n            colorRange={['#70bbfd', '#c88ffa']}\n          >\n            <HorizontalGridLines />\n            <VerticalGridLines />\n            <XAxis />\n            <YAxis />\n            {data.map(props => <LineSeries className=\"react-vis__svg-line\" {...props} />)}\n          </FlexibleWidthXYPlot>\n        </div>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nLineSeriesWithManyColors.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(LineSeriesWithManyColors);\n"]},"metadata":{},"sourceType":"module"}