{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/shared/components/Alert.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Alert, Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport InformationOutlineIcon from 'mdi-react/InformationOutlineIcon';\nimport ThumbUpOutlineIcon from 'mdi-react/ThumbUpOutlineIcon';\nimport CommentAlertOutlineIcon from 'mdi-react/CommentAlertOutlineIcon';\nimport CloseCircleOutlineIcon from 'mdi-react/CloseCircleOutlineIcon';\n\nvar AlertComponent =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AlertComponent, _PureComponent);\n\n  function AlertComponent() {\n    var _this;\n\n    _classCallCheck(this, AlertComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlertComponent).call(this));\n\n    _this.onShow = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      visible: true\n    };\n    return _this;\n  }\n\n  _createClass(AlertComponent, [{\n    key: \"render\",\n    value: function render() {\n      var visible = this.state.visible;\n      var _this$props = this.props,\n          color = _this$props.color,\n          className = _this$props.className,\n          icon = _this$props.icon,\n          children = _this$props.children;\n      var Icon;\n\n      switch (color) {\n        case 'info':\n          Icon = React.createElement(InformationOutlineIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n          break;\n\n        case 'success':\n          Icon = React.createElement(ThumbUpOutlineIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          });\n          break;\n\n        case 'warning':\n          Icon = React.createElement(CommentAlertOutlineIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          });\n          break;\n\n        case 'danger':\n          Icon = React.createElement(CloseCircleOutlineIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      if (visible) {\n        return React.createElement(Alert, {\n          color: color,\n          className: className,\n          isOpen: visible,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, icon && React.createElement(\"div\", {\n          className: \"alert__icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, Icon), React.createElement(\"button\", {\n          className: \"close\",\n          type: \"button\",\n          onClick: this.onDismiss,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"lnr lnr-cross\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"alert__content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, children));\n      }\n\n      return React.createElement(Button, {\n        onClick: this.onShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Show Alert\");\n    }\n  }]);\n\n  return AlertComponent;\n}(PureComponent);\n\nAlertComponent.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.element.isRequired\n};\nAlertComponent.defaultProps = {\n  color: '',\n  icon: false,\n  className: ''\n};\nexport { AlertComponent as default };","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/shared/components/Alert.jsx"],"names":["React","PureComponent","Alert","Button","PropTypes","InformationOutlineIcon","ThumbUpOutlineIcon","CommentAlertOutlineIcon","CloseCircleOutlineIcon","AlertComponent","onShow","setState","visible","onDismiss","state","props","color","className","icon","children","Icon","propTypes","string","bool","element","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Alert, Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport InformationOutlineIcon from 'mdi-react/InformationOutlineIcon';\nimport ThumbUpOutlineIcon from 'mdi-react/ThumbUpOutlineIcon';\nimport CommentAlertOutlineIcon from 'mdi-react/CommentAlertOutlineIcon';\nimport CloseCircleOutlineIcon from 'mdi-react/CloseCircleOutlineIcon';\n\nexport default class AlertComponent extends PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    icon: PropTypes.bool,\n    className: PropTypes.string,\n    children: PropTypes.element.isRequired,\n  };\n\n  static defaultProps = {\n    color: '',\n    icon: false,\n    className: '',\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      visible: true,\n    };\n  }\n\n  onShow = () => {\n    this.setState({ visible: true });\n  };\n\n  onDismiss = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const { visible } = this.state;\n\n    const {\n      color, className, icon, children,\n    } = this.props;\n    let Icon;\n\n    switch (color) {\n      case 'info':\n        Icon = <InformationOutlineIcon />;\n        break;\n      case 'success':\n        Icon = <ThumbUpOutlineIcon />;\n        break;\n      case 'warning':\n        Icon = <CommentAlertOutlineIcon />;\n        break;\n      case 'danger':\n        Icon = <CloseCircleOutlineIcon />;\n        break;\n      default:\n        break;\n    }\n\n    if (visible) {\n      return (\n        <Alert color={color} className={className} isOpen={visible}>\n          {icon && <div className=\"alert__icon\">{Icon}</div>}\n          <button className=\"close\" type=\"button\" onClick={this.onDismiss}><span className=\"lnr lnr-cross\" /></button>\n          <div className=\"alert__content\">\n            {children}\n          </div>\n        </Alert>\n      );\n    }\n\n    return <Button onClick={this.onShow}>Show Alert</Button>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}