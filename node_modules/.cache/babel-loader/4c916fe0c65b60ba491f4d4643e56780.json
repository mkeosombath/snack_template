{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/Form/MaskForm/components/MaskExamples.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport MaskedInput from 'react-text-mask';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      placeholder = _ref.placeholder,\n      type = _ref.type,\n      mask = _ref.mask,\n      className = _ref.className,\n      _ref$guide = _ref.guide,\n      guide = _ref$guide === void 0 ? true : _ref$guide,\n      pipe = _ref.pipe,\n      _ref$keepCharPosition = _ref.keepCharPositions,\n      keepCharPositions = _ref$keepCharPosition === void 0 ? false : _ref$keepCharPosition;\n  return React.createElement(MaskedInput, Object.assign({}, input, {\n    placeholder: placeholder,\n    type: type,\n    mask: mask,\n    className: className,\n    guide: guide,\n    pipe: pipe,\n    keepCharPositions: keepCharPositions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nrenderField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  mask: PropTypes.arrayOf(PropTypes.any).isRequired,\n  className: PropTypes.string.isRequired,\n  guide: PropTypes.bool.isRequired,\n  keepCharPositions: PropTypes.bool.isRequired,\n  pipe: PropTypes.func.isRequired\n};\nrenderField.defaultProps = {\n  placeholder: '',\n  type: 'text'\n};\n\nvar maskDate = function maskDate(dir, sep) {\n  if (dir === 'rtl') {\n    return [/\\d/, /\\d/, /\\d/, /\\d/, sep, /[0-1]/, /\\d/, sep, /[0-3]/, /\\d/];\n  }\n\n  return [/[0-3]/, /\\d/, sep, /[0-1]/, /\\d/, sep, /\\d/, /\\d/, /\\d/, /\\d/];\n};\n\nvar autoCorrectedDatePipe = function autoCorrectedDatePipe(dir, sep) {\n  var format = dir === 'rtl' ? \"yyyy\".concat(sep, \"mm\").concat(sep, \"dd\") : \"dd\".concat(sep, \"mm\").concat(sep, \"yyyy\");\n  return createAutoCorrectedDatePipe(format);\n};\n\nvar numberMask = createNumberMask({\n  prefix: '$ ',\n  allowDecimal: true,\n  allowLeadingZeroes: true\n});\n\nvar ipMask = function ipMask() {\n  return [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/];\n};\n\nvar all = /[A-Za-z0-9]/;\n\nvar MaskExamples = function MaskExamples(_ref2) {\n  var handleSubmit = _ref2.handleSubmit,\n      reset = _ref2.reset,\n      t = _ref2.t,\n      dir = _ref2.dir;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, t('forms.mask_form.mask_examples'))), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Phone \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"(xxx)-xxx-xxxx\")), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"phone\",\n    component: renderField,\n    type: \"text\",\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    className: \"phone-input\",\n    guide: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Phone with code \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"+23 xxx xx xx\")), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"phone_code\",\n    component: renderField,\n    type: \"text\",\n    mask: ['+', '2', '3', ' ', /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, ' ', /\\d/, /\\d/],\n    className: \"phone-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Date\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\".concat(dir === 'ltr' ? ' dd/mm/yyyy' : ' yyyy/mm/dd'))), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"date\",\n    component: renderField,\n    type: \"text\",\n    mask: maskDate(dir, '/'),\n    pipe: autoCorrectedDatePipe(dir, '/'),\n    keepCharPositions: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Date\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"\".concat(dir === 'ltr' ? ' dd-mm-yyyy' : ' yyyy-mm-dd'))), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"date_another\",\n    component: renderField,\n    type: \"text\",\n    mask: maskDate(dir, '-'),\n    pipe: autoCorrectedDatePipe(dir, '-'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Currency \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"$xxx,xxx,xxx.xx\")), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"currency\",\n    component: renderField,\n    type: \"text\",\n    mask: numberMask,\n    guide: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Licence key \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"xxxx-xxxx-xxxx-xxxx\")), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"licence\",\n    component: renderField,\n    type: \"text\",\n    mask: [all, all, all, all, '-', all, all, all, all, '-', all, all, all, all, '-', all, all, all, all],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"form__form-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"IP Address \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"xxx.xxx.xxx.xxx\")), React.createElement(\"div\", {\n    className: \"form__form-group-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"ip\",\n    component: renderField,\n    type: \"text\" // mask={[/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: ipMask,\n    guide: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(ButtonToolbar, {\n    className: \"form__button-toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    type: \"button\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Cancel\"))))));\n};\n\nMaskExamples.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired\n};\nexport default reduxForm({\n  form: 'mask_examples' // a unique identifier for this form\n\n})(withTranslation('common')(MaskExamples));","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/Form/MaskForm/components/MaskExamples.jsx"],"names":["React","Card","CardBody","Col","Button","ButtonToolbar","Field","reduxForm","MaskedInput","withTranslation","PropTypes","createAutoCorrectedDatePipe","createNumberMask","renderField","input","placeholder","type","mask","className","guide","pipe","keepCharPositions","propTypes","shape","isRequired","string","arrayOf","any","bool","func","defaultProps","maskDate","dir","sep","autoCorrectedDatePipe","format","numberMask","prefix","allowDecimal","allowLeadingZeroes","ipMask","all","MaskExamples","handleSubmit","reset","t","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport MaskedInput from 'react-text-mask';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nconst renderField = ({\n  input, placeholder, type, mask, className, guide = true, pipe, keepCharPositions = false,\n}) => (\n  <MaskedInput\n    {...input}\n    placeholder={placeholder}\n    type={type}\n    mask={mask}\n    className={className}\n    guide={guide}\n    pipe={pipe}\n    keepCharPositions={keepCharPositions}\n  />\n);\n\nrenderField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  mask: PropTypes.arrayOf(PropTypes.any).isRequired,\n  className: PropTypes.string.isRequired,\n  guide: PropTypes.bool.isRequired,\n  keepCharPositions: PropTypes.bool.isRequired,\n  pipe: PropTypes.func.isRequired,\n};\n\nrenderField.defaultProps = {\n  placeholder: '',\n  type: 'text',\n};\n\nconst maskDate = (dir, sep) => {\n  if (dir === 'rtl') {\n    return [/\\d/, /\\d/, /\\d/, /\\d/, sep, /[0-1]/, /\\d/, sep, /[0-3]/, /\\d/];\n  }\n  return [/[0-3]/, /\\d/, sep, /[0-1]/, /\\d/, sep, /\\d/, /\\d/, /\\d/, /\\d/];\n};\n\nconst autoCorrectedDatePipe = (dir, sep) => {\n  const format = dir === 'rtl' ? `yyyy${sep}mm${sep}dd` : `dd${sep}mm${sep}yyyy`;\n  return createAutoCorrectedDatePipe(format);\n};\n\nconst numberMask = createNumberMask({\n  prefix: '$ ',\n  allowDecimal: true,\n  allowLeadingZeroes: true,\n});\n\nconst ipMask = () => [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/];\n\nconst all = /[A-Za-z0-9]/;\n\nconst MaskExamples = ({\n  handleSubmit, reset, t, dir,\n}) => (\n  <Col md={12} lg={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('forms.mask_form.mask_examples')}</h5>\n        </div>\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Phone <span>(xxx)-xxx-xxxx</span></span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"phone\"\n                component={renderField}\n                type=\"text\"\n                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                className=\"phone-input\"\n                guide={false}\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Phone with code <span>+23 xxx xx xx</span></span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"phone_code\"\n                component={renderField}\n                type=\"text\"\n                mask={['+', '2', '3', ' ', /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, ' ', /\\d/, /\\d/]}\n                className=\"phone-input\"\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Date\n              <span>{`${dir === 'ltr' ? ' dd/mm/yyyy' : ' yyyy/mm/dd'}`}</span>\n            </span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"date\"\n                component={renderField}\n                type=\"text\"\n                mask={maskDate(dir, '/')}\n                pipe={autoCorrectedDatePipe(dir, '/')}\n                keepCharPositions\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Date\n              <span>{`${dir === 'ltr' ? ' dd-mm-yyyy' : ' yyyy-mm-dd'}`}</span>\n            </span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"date_another\"\n                component={renderField}\n                type=\"text\"\n                mask={maskDate(dir, '-')}\n                pipe={autoCorrectedDatePipe(dir, '-')}\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Currency <span>$xxx,xxx,xxx.xx</span></span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"currency\"\n                component={renderField}\n                type=\"text\"\n                mask={numberMask}\n                guide={false}\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Licence key <span>xxxx-xxxx-xxxx-xxxx</span></span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"licence\"\n                component={renderField}\n                type=\"text\"\n                mask={[all, all, all, all, '-', all, all, all, all, '-', all, all, all, all, '-', all, all, all, all]}\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">IP Address <span>xxx.xxx.xxx.xxx</span></span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"ip\"\n                component={renderField}\n                type=\"text\"\n                // mask={[/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/]}\n                mask={ipMask}\n                guide={false}\n              />\n            </div>\n          </div>\n          <ButtonToolbar className=\"form__button-toolbar\">\n            <Button color=\"primary\" type=\"submit\">Submit</Button>\n            <Button type=\"button\" onClick={reset}>\n                  Cancel\n            </Button>\n          </ButtonToolbar>\n        </form>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nMaskExamples.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nexport default reduxForm({\n  form: 'mask_examples', // a unique identifier for this form\n})(withTranslation('common')(MaskExamples));\n"]},"metadata":{},"sourceType":"module"}