{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/ECommerce/OrdersList/components/OrdersListTable.jsx\";\n\n/* eslint-disable react/no-unused-state */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\nvar MoneyFormatter = function MoneyFormatter(_ref) {\n  var value = _ref.value;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"$\", value);\n};\n\nMoneyFormatter.propTypes = {\n  value: PropTypes.string.isRequired\n};\n\nvar StatusFormatter = function StatusFormatter(_ref2) {\n  var value = _ref2.value;\n  return value === 'Enabled' ? React.createElement(\"span\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Enabled\") : React.createElement(\"span\", {\n    className: \"badge badge-disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Disabled\");\n};\n\nStatusFormatter.propTypes = {\n  value: PropTypes.string.isRequired\n};\n\nvar OrdersListTable =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(OrdersListTable, _PureComponent);\n\n  function OrdersListTable() {\n    var _this;\n\n    _classCallCheck(this, OrdersListTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersListTable).call(this));\n\n    _this.onChangePage = function (pageOfItems) {\n      // update state with new page of items\n      _this.setState({\n        pageOfItems: pageOfItems\n      });\n    };\n\n    _this.getRandomDate = function (start, end) {\n      return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n    };\n\n    _this.createRows = function (numberOfRows) {\n      var rows = [];\n\n      for (var i = 1; i < numberOfRows + 1; i += 1) {\n        rows.push({\n          id: Math.min(99999, Math.round(Math.random() * 99999 + 1000)),\n          date: _this.getRandomDate(new Date(2017, 3, 1), new Date(2018, 3, 1)),\n          customer_name: ['Maria', 'Bobby  ', 'Alexander'][Math.floor(Math.random() * 3)],\n          price: Math.min(1000, Math.random() * 1000 + 20).toFixed(2),\n          tax: Math.min(10, Math.random() * 10).toFixed(2),\n          delivery: Math.min(10, Math.random() * 10).toFixed(2),\n          quantity: Math.min(5, Math.round(Math.random() * 5 + 1)),\n          status: ['Enabled', 'Disabled'][Math.floor(Math.random() * 2)]\n        });\n      }\n\n      return rows;\n    };\n\n    _this.heads = [{\n      key: 'id',\n      name: 'ID',\n      width: 80,\n      sortable: true\n    }, {\n      key: 'date',\n      name: 'Date',\n      sortable: true\n    }, {\n      key: 'customer_name',\n      name: 'Customer Name',\n      sortable: true\n    }, {\n      key: 'price',\n      name: 'Price',\n      sortable: true,\n      formatter: MoneyFormatter\n    }, {\n      key: 'tax',\n      name: 'Tax',\n      sortable: true,\n      formatter: MoneyFormatter\n    }, {\n      key: 'delivery',\n      name: 'Delivery',\n      sortable: true,\n      formatter: MoneyFormatter\n    }, {\n      key: 'quantity',\n      name: 'Quantity',\n      sortable: true\n    }, {\n      key: 'status',\n      name: 'Status',\n      sortable: true,\n      formatter: StatusFormatter,\n      width: 110\n    }];\n    _this.state = {\n      rows: _this.createRows(17),\n      pageOfItems: []\n    };\n    return _this;\n  }\n\n  _createClass(OrdersListTable, [{\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.rows;\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Orders list\")), React.createElement(\"p\", {\n        className: \"typography-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Show\", React.createElement(\"select\", {\n        className: \"select-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"20\"), React.createElement(\"option\", {\n        value: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"30\")), \"entries\"), React.createElement(EditTable, {\n        heads: this.heads,\n        rows: rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return OrdersListTable;\n}(PureComponent);\n\nexport { OrdersListTable as default };","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/ECommerce/OrdersList/components/OrdersListTable.jsx"],"names":["React","PureComponent","Card","CardBody","Col","PropTypes","EditTable","MoneyFormatter","value","propTypes","string","isRequired","StatusFormatter","OrdersListTable","onChangePage","pageOfItems","setState","getRandomDate","start","end","Date","getTime","Math","random","toLocaleDateString","createRows","numberOfRows","rows","i","push","id","min","round","date","customer_name","floor","price","toFixed","tax","delivery","quantity","status","heads","key","name","width","sortable","formatter","state"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\nconst MoneyFormatter = ({ value }) => (\n  <div>\n      ${value}\n  </div>\n);\n\nMoneyFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nconst StatusFormatter = ({ value }) => (\n  value === 'Enabled' ? <span className=\"badge badge-success\">Enabled</span>\n    : <span className=\"badge badge-disabled\">Disabled</span>\n);\n\nStatusFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default class OrdersListTable extends PureComponent {\n  constructor() {\n    super();\n    this.heads = [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 80,\n        sortable: true,\n      },\n      {\n        key: 'date',\n        name: 'Date',\n        sortable: true,\n      },\n      {\n        key: 'customer_name',\n        name: 'Customer Name',\n        sortable: true,\n      },\n      {\n        key: 'price',\n        name: 'Price',\n        sortable: true,\n        formatter: MoneyFormatter,\n      },\n      {\n        key: 'tax',\n        name: 'Tax',\n        sortable: true,\n        formatter: MoneyFormatter,\n      },\n      {\n        key: 'delivery',\n        name: 'Delivery',\n        sortable: true,\n        formatter: MoneyFormatter,\n      },\n      {\n        key: 'quantity',\n        name: 'Quantity',\n        sortable: true,\n      },\n      {\n        key: 'status',\n        name: 'Status',\n        sortable: true,\n        formatter: StatusFormatter,\n        width: 110,\n      },\n    ];\n\n    this.state = {\n      rows: this.createRows(17),\n      pageOfItems: [],\n    };\n  }\n\n  onChangePage = (pageOfItems) => {\n    // update state with new page of items\n    this.setState({ pageOfItems });\n  };\n\n  getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  createRows = (numberOfRows) => {\n    const rows = [];\n\n    for (let i = 1; i < numberOfRows + 1; i += 1) {\n      rows.push({\n        id: Math.min(99999, Math.round((Math.random() * 99999) + 1000)),\n        date: this.getRandomDate(new Date(2017, 3, 1), new Date(2018, 3, 1)),\n        customer_name: ['Maria', 'Bobby  ', 'Alexander'][Math.floor((Math.random() * 3))],\n        price: Math.min(1000, (Math.random() * 1000) + 20).toFixed(2),\n        tax: Math.min(10, Math.random() * 10).toFixed(2),\n        delivery: Math.min(10, Math.random() * 10).toFixed(2),\n        quantity: Math.min(5, Math.round((Math.random() * 5) + 1)),\n        status: ['Enabled', 'Disabled'][Math.floor((Math.random() * 2))],\n      });\n    }\n    return rows;\n  };\n\n  render() {\n    const { rows } = this.state;\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">Orders list</h5>\n            </div>\n            <p className=\"typography-message\">Show\n              <select className=\"select-options\">\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n                <option value=\"30\">30</option>\n              </select>\n              entries\n            </p>\n            <EditTable heads={this.heads} rows={rows} />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}