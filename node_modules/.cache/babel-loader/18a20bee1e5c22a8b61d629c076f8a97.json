{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Charts/ChartJs/components/LegendHandlers.jsx\";\n\n/* eslint-disable no-alert */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nvar data = {\n  labels: ['Red', 'Blue', 'Yellow'],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    borderColor: 'rgba(255,255,255,0.54)'\n  }]\n};\nvar legendOpts = {\n  onClick: function onClick(e, item) {\n    return alert(\"Item with text \".concat(item.text, \" and index \").concat(item.index, \" clicked\"));\n  }\n};\n\nvar PolarArea =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(PolarArea, _PureComponent);\n\n  function PolarArea(props) {\n    var _this;\n\n    _classCallCheck(this, PolarArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolarArea).call(this, props));\n    _this.state = {\n      legend: legendOpts\n    };\n    _this.applyLegendSettings = _this.applyLegendSettings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PolarArea, [{\n    key: \"applyLegendSettings\",\n    value: function applyLegendSettings() {\n      var value = this.legendOptsInput.value;\n\n      try {\n        var opts = JSON.parse(value);\n        this.setState({\n          legend: opts\n        });\n      } catch (e) {\n        alert(e.message);\n        throw Error(e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var legend = this.state.legend;\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, t('charts.react_chartjs.legend_handlers'))), React.createElement(Pie, {\n        data: data,\n        legend: legend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PolarArea;\n}(PureComponent);\n\nPolarArea.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(PolarArea);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Charts/ChartJs/components/LegendHandlers.jsx"],"names":["React","PureComponent","Card","CardBody","Col","Pie","withTranslation","PropTypes","data","labels","datasets","backgroundColor","hoverBackgroundColor","borderColor","legendOpts","onClick","e","item","alert","text","index","PolarArea","props","state","legend","applyLegendSettings","bind","value","legendOptsInput","opts","JSON","parse","setState","message","Error","t","propTypes","func","isRequired"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CACN,KADM,EAEN,MAFM,EAGN,QAHM,CADG;AAMXC,EAAAA,QAAQ,EAAE,CAAC;AACTF,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CADG;AAETG,IAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,CAFR;AAOTC,IAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,CAPb;AAYTC,IAAAA,WAAW,EAAE;AAZJ,GAAD;AANC,CAAb;AAsBA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,IAAJ;AAAA,WAAaC,KAAK,0BAAmBD,IAAI,CAACE,IAAxB,wBAA0CF,IAAI,CAACG,KAA/C,cAAlB;AAAA;AADQ,CAAnB;;IAIMC,S;;;;;AAKJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEV;AADG,KAAb;AAIA,UAAKW,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,uDAA3B;AANiB;AAOlB;;;;0CAEqB;AAAA,UACZC,KADY,GACF,KAAKC,eADH,CACZD,KADY;;AAGpB,UAAI;AACF,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAb;AACA,aAAKK,QAAL,CAAc;AACZR,UAAAA,MAAM,EAAEK;AADI,SAAd;AAGD,OALD,CAKE,OAAOb,CAAP,EAAU;AACVE,QAAAA,KAAK,CAACF,CAAC,CAACiB,OAAH,CAAL;AACA,cAAMC,KAAK,CAAClB,CAAD,CAAX;AACD;AACF;;;6BAEQ;AAAA,UACCmB,CADD,GACO,KAAKb,KADZ,CACCa,CADD;AAAA,UAECX,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAIP,aACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BW,CAAC,CAAC,sCAAD,CAA5B,CADF,CADF,EAIE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE3B,IAAX;AAAiB,QAAA,MAAM,EAAEgB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CADF,CADF;AAYD;;;;EA5CqBvB,a;;AAAlBoB,S,CACGe,S,GAAY;AACjBD,EAAAA,CAAC,EAAE5B,SAAS,CAAC8B,IAAV,CAAeC;AADD,C;AA8CrB,eAAehC,eAAe,CAAC,QAAD,CAAf,CAA0Be,SAA1B,CAAf","sourcesContent":["/* eslint-disable no-alert */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst data = {\n  labels: [\n    'Red',\n    'Blue',\n    'Yellow',\n  ],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: [\n      '#FF6384',\n      '#36A2EB',\n      '#FFCE56',\n    ],\n    hoverBackgroundColor: [\n      '#FF6384',\n      '#36A2EB',\n      '#FFCE56',\n    ],\n    borderColor: 'rgba(255,255,255,0.54)',\n  }],\n};\n\nconst legendOpts = {\n  onClick: (e, item) => alert(`Item with text ${item.text} and index ${item.index} clicked`),\n};\n\nclass PolarArea extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      legend: legendOpts,\n    };\n\n    this.applyLegendSettings = this.applyLegendSettings.bind(this);\n  }\n\n  applyLegendSettings() {\n    const { value } = this.legendOptsInput;\n\n    try {\n      const opts = JSON.parse(value);\n      this.setState({\n        legend: opts,\n      });\n    } catch (e) {\n      alert(e.message);\n      throw Error(e);\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { legend } = this.state;\n\n    return (\n      <Col md={12} lg={12} xl={6}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{t('charts.react_chartjs.legend_handlers')}</h5>\n            </div>\n            <Pie data={data} legend={legend} />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withTranslation('common')(PolarArea);\n"]},"metadata":{},"sourceType":"module"}