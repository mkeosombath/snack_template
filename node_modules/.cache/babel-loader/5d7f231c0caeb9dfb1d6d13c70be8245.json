{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/shared/components/form/RadioButton.jsx\";\n\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar RadioButtonField =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(RadioButtonField, _PureComponent);\n\n  function RadioButtonField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RadioButtonField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RadioButtonField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function () {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          radioValue = _this$props.radioValue;\n      onChange(radioValue);\n    };\n\n    return _this;\n  }\n\n  _createClass(RadioButtonField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          defaultChecked = _this$props2.defaultChecked,\n          onChange = _this$props2.onChange,\n          radioValue = _this$props2.radioValue;\n\n      if (defaultChecked) {\n        onChange(radioValue);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          disabled = _this$props3.disabled,\n          className = _this$props3.className,\n          name = _this$props3.name,\n          label = _this$props3.label,\n          radioValue = _this$props3.radioValue,\n          value = _this$props3.value;\n      var RadioButtonClass = classNames({\n        'radio-btn': true,\n        disabled: disabled\n      });\n      return React.createElement(\"label\", {\n        className: \"\".concat(RadioButtonClass).concat(className ? \" radio-btn--\".concat(className) : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"radio-btn__radio\",\n        name: name,\n        type: \"radio\",\n        onChange: this.onChange,\n        checked: value === radioValue,\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"radio-btn__radio-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), className === 'button' ? React.createElement(\"span\", {\n        className: \"radio-btn__label-svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        className: \"radio-btn__label-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(CloseIcon, {\n        className: \"radio-btn__label-uncheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })) : '', React.createElement(\"span\", {\n        className: \"radio-btn__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, label));\n    }\n  }]);\n\n  return RadioButtonField;\n}(PureComponent);\n\nRadioButtonField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  defaultChecked: PropTypes.bool,\n  radioValue: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string\n};\nRadioButtonField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  radioValue: '',\n  disabled: false,\n  className: ''\n};\n\nvar renderRadioButtonField = function renderRadioButtonField(props) {\n  var input = props.input,\n      label = props.label,\n      defaultChecked = props.defaultChecked,\n      disabled = props.disabled,\n      className = props.className,\n      radioValue = props.radioValue;\n  return React.createElement(RadioButtonField, Object.assign({}, input, {\n    label: label,\n    defaultChecked: defaultChecked,\n    disabled: disabled,\n    radioValue: radioValue,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\n\nrenderRadioButtonField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  radioValue: PropTypes.string,\n  className: PropTypes.string\n};\nrenderRadioButtonField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  radioValue: '',\n  className: ''\n};\nexport default renderRadioButtonField;","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/shared/components/form/RadioButton.jsx"],"names":["React","PureComponent","CheckIcon","CloseIcon","PropTypes","classNames","RadioButtonField","onChange","props","radioValue","defaultChecked","disabled","className","name","label","value","RadioButtonClass","propTypes","func","isRequired","string","oneOfType","element","bool","defaultProps","renderRadioButtonField","input","shape"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass RadioButtonField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    defaultChecked: PropTypes.bool,\n    radioValue: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    label: '',\n    defaultChecked: false,\n    radioValue: '',\n    disabled: false,\n    className: '',\n  };\n\n  componentDidMount() {\n    const { defaultChecked, onChange, radioValue } = this.props;\n    if (defaultChecked) {\n      onChange(radioValue);\n    }\n  }\n\n  onChange = () => {\n    const { onChange, radioValue } = this.props;\n    onChange(radioValue);\n  };\n\n  render() {\n    const {\n      disabled, className, name, label, radioValue, value,\n    } = this.props;\n    const RadioButtonClass = classNames({\n      'radio-btn': true,\n      disabled,\n    });\n\n    return (\n      <label\n        className={`${RadioButtonClass}${className ? ` radio-btn--${className}` : ''}`}\n      >\n        <input\n          className=\"radio-btn__radio\"\n          name={name}\n          type=\"radio\"\n          onChange={this.onChange}\n          checked={value === radioValue}\n          disabled={disabled}\n        />\n        <span className=\"radio-btn__radio-custom\" />\n        {className === 'button'\n          ? (\n            <span className=\"radio-btn__label-svg\">\n              <CheckIcon className=\"radio-btn__label-check\" />\n              <CloseIcon className=\"radio-btn__label-uncheck\" />\n            </span>\n          ) : ''}\n        <span className=\"radio-btn__label\">{label}</span>\n      </label>\n    );\n  }\n}\n\nconst renderRadioButtonField = (props) => {\n  const {\n    input, label, defaultChecked, disabled, className, radioValue,\n  } = props;\n  return (\n    <RadioButtonField\n      {...input}\n      label={label}\n      defaultChecked={defaultChecked}\n      disabled={disabled}\n      radioValue={radioValue}\n      className={className}\n    />\n  );\n};\n\nrenderRadioButtonField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  radioValue: PropTypes.string,\n  className: PropTypes.string,\n};\n\nrenderRadioButtonField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  radioValue: '',\n  className: '',\n};\n\nexport default renderRadioButtonField;\n"]},"metadata":{},"sourceType":"module"}