{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/shared/components/Modal.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '../prop-types/ReducerProps';\n\nvar ModalComponent =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ModalComponent, _PureComponent);\n\n  function ModalComponent() {\n    var _this;\n\n    _classCallCheck(this, ModalComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalComponent).call(this));\n    _this.state = {\n      modal: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ModalComponent, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          btn = _this$props.btn,\n          title = _this$props.title,\n          message = _this$props.message,\n          colored = _this$props.colored,\n          header = _this$props.header,\n          rtl = _this$props.rtl;\n      var modal = this.state.modal;\n      var Icon;\n\n      switch (color) {\n        case 'primary':\n          Icon = React.createElement(\"span\", {\n            className: \"lnr lnr-pushpin modal__title-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          });\n          break;\n\n        case 'success':\n          Icon = React.createElement(\"span\", {\n            className: \"lnr lnr-thumbs-up modal__title-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n          break;\n\n        case 'warning':\n          Icon = React.createElement(\"span\", {\n            className: \"lnr lnr-flag modal__title-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n          break;\n\n        case 'danger':\n          Icon = React.createElement(\"span\", {\n            className: \"lnr lnr-cross-circle modal__title-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      var modalClass = classNames({\n        'modal-dialog--colored': colored,\n        'modal-dialog--header': header\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: color,\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, btn), React.createElement(Modal, {\n        isOpen: modal,\n        toggle: this.toggle,\n        modalClassName: \"\".concat(rtl.direction, \"-support\"),\n        className: \"modal-dialog--\".concat(color, \" \").concat(modalClass),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"lnr lnr-cross modal__close-btn\",\n        type: \"button\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), header ? '' : Icon, React.createElement(\"h4\", {\n        className: \"text-modal  modal__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, title)), React.createElement(\"div\", {\n        className: \"modal__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, message), React.createElement(ButtonToolbar, {\n        className: \"modal__footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"modal_cancel\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Cancel\"), ' ', React.createElement(Button, {\n        className: \"modal_ok\",\n        outline: colored,\n        color: color,\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return ModalComponent;\n}(PureComponent);\n\nModalComponent.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  colored: PropTypes.bool,\n  header: PropTypes.bool,\n  btn: PropTypes.string.isRequired,\n  rtl: RTLProps.isRequired\n};\nModalComponent.defaultProps = {\n  title: '',\n  message: '',\n  colored: false,\n  header: false\n};\nexport default connect(function (state) {\n  return {\n    rtl: state.rtl\n  };\n})(ModalComponent);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/shared/components/Modal.jsx"],"names":["React","PureComponent","PropTypes","connect","Button","ButtonToolbar","Modal","classNames","RTLProps","ModalComponent","state","modal","toggle","bind","setState","prevState","props","color","btn","title","message","colored","header","rtl","Icon","modalClass","direction","propTypes","string","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '../prop-types/ReducerProps';\n\nclass ModalComponent extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    message: PropTypes.string,\n    color: PropTypes.string.isRequired,\n    colored: PropTypes.bool,\n    header: PropTypes.bool,\n    btn: PropTypes.string.isRequired,\n    rtl: RTLProps.isRequired,\n  };\n\n  static defaultProps = {\n    title: '',\n    message: '',\n    colored: false,\n    header: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      modal: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({ modal: !prevState.modal }));\n  }\n\n  render() {\n    const {\n      color, btn, title, message, colored, header, rtl,\n    } = this.props;\n    const { modal } = this.state;\n    let Icon;\n\n    switch (color) {\n      case 'primary':\n        Icon = <span className=\"lnr lnr-pushpin modal__title-icon\" />;\n        break;\n      case 'success':\n        Icon = <span className=\"lnr lnr-thumbs-up modal__title-icon\" />;\n        break;\n      case 'warning':\n        Icon = <span className=\"lnr lnr-flag modal__title-icon\" />;\n        break;\n      case 'danger':\n        Icon = <span className=\"lnr lnr-cross-circle modal__title-icon\" />;\n        break;\n      default:\n        break;\n    }\n    const modalClass = classNames({\n      'modal-dialog--colored': colored,\n      'modal-dialog--header': header,\n    });\n\n    return (\n      <div>\n        <Button color={color} onClick={this.toggle}>{btn}</Button>\n        <Modal\n          isOpen={modal}\n          toggle={this.toggle}\n          modalClassName={`${rtl.direction}-support`}\n          className={`modal-dialog--${color} ${modalClass}`}\n        >\n          <div className=\"modal__header\">\n            <button className=\"lnr lnr-cross modal__close-btn\" type=\"button\" onClick={this.toggle} />\n            {header ? '' : Icon}\n            <h4 className=\"text-modal  modal__title\">{title}</h4>\n          </div>\n          <div className=\"modal__body\">\n            {message}\n          </div>\n          <ButtonToolbar className=\"modal__footer\">\n            <Button className=\"modal_cancel\" onClick={this.toggle}>Cancel</Button>{' '}\n            <Button className=\"modal_ok\" outline={colored} color={color} onClick={this.toggle}>Ok</Button>\n          </ButtonToolbar>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({\n  rtl: state.rtl,\n}))(ModalComponent);\n"]},"metadata":{},"sourceType":"module"}