{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/shared/components/form/CheckBox.jsx\";\n\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar CheckBoxField =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CheckBoxField, _PureComponent);\n\n  function CheckBoxField() {\n    _classCallCheck(this, CheckBoxField);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CheckBoxField).apply(this, arguments));\n  }\n\n  _createClass(CheckBoxField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          defaultChecked = _this$props.defaultChecked;\n      onChange(defaultChecked);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          className = _this$props2.className,\n          name = _this$props2.name,\n          value = _this$props2.value,\n          onChange = _this$props2.onChange,\n          label = _this$props2.label,\n          color = _this$props2.color;\n      var CheckboxClass = classNames({\n        'checkbox-btn': true,\n        disabled: disabled\n      });\n      return React.createElement(\"label\", {\n        className: \"\".concat(CheckboxClass, \" \").concat(className ? \" checkbox-btn--\".concat(className) : ''),\n        htmlFor: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"checkbox-btn__checkbox\",\n        type: \"checkbox\",\n        id: name,\n        name: name,\n        onChange: onChange,\n        checked: value,\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkbox-btn__checkbox-custom\",\n        style: color ? {\n          background: color,\n          borderColor: color\n        } : {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), className === 'button' ? React.createElement(\"span\", {\n        className: \"checkbox-btn__label-svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        className: \"checkbox-btn__label-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(CloseIcon, {\n        className: \"checkbox-btn__label-uncheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })) : '', React.createElement(\"span\", {\n        className: \"checkbox-btn__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, label));\n    }\n  }]);\n\n  return CheckBoxField;\n}(PureComponent);\n\nCheckBoxField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string\n};\nCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: ''\n};\n\nvar renderCheckBoxField = function renderCheckBoxField(props) {\n  var input = props.input,\n      label = props.label,\n      defaultChecked = props.defaultChecked,\n      disabled = props.disabled,\n      className = props.className,\n      color = props.color;\n  return React.createElement(CheckBoxField, Object.assign({}, input, {\n    label: label,\n    defaultChecked: defaultChecked,\n    disabled: disabled,\n    className: className,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n};\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string\n};\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: ''\n};\nexport default renderCheckBoxField;","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/shared/components/form/CheckBox.jsx"],"names":["React","PureComponent","CheckIcon","CloseIcon","PropTypes","classNames","CheckBoxField","props","onChange","defaultChecked","disabled","className","name","value","label","color","CheckboxClass","background","borderColor","propTypes","func","isRequired","string","oneOfType","bool","defaultProps","renderCheckBoxField","input","shape"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n\nclass CheckBoxField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]).isRequired,\n    label: PropTypes.string,\n    defaultChecked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    color: PropTypes.string,\n  };\n\n  static defaultProps = {\n    label: '',\n    defaultChecked: false,\n    disabled: false,\n    className: '',\n    color: '',\n  };\n\n  componentDidMount() {\n    const { onChange, defaultChecked } = this.props;\n    onChange(defaultChecked);\n  }\n\n  render() {\n    const {\n      disabled, className, name, value, onChange, label, color,\n    } = this.props;\n    const CheckboxClass = classNames({\n      'checkbox-btn': true,\n      disabled,\n    });\n\n    return (\n      <label\n        className={`${CheckboxClass} ${className ? ` checkbox-btn--${className}` : ''}`}\n        htmlFor={name}\n      >\n        <input\n          className=\"checkbox-btn__checkbox\"\n          type=\"checkbox\"\n          id={name}\n          name={name}\n          onChange={onChange}\n          checked={value}\n          disabled={disabled}\n        />\n        <span\n          className=\"checkbox-btn__checkbox-custom\"\n          style={color ? { background: color, borderColor: color } : {}}\n        >\n          <CheckIcon />\n        </span>\n        {className === 'button'\n          ? (\n            <span className=\"checkbox-btn__label-svg\">\n              <CheckIcon className=\"checkbox-btn__label-check\" />\n              <CloseIcon className=\"checkbox-btn__label-uncheck\" />\n            </span>\n          ) : ''}\n        <span className=\"checkbox-btn__label\">\n          {label}\n        </span>\n      </label>\n    );\n  }\n}\n\nconst renderCheckBoxField = (props) => {\n  const {\n    input, label, defaultChecked, disabled, className, color,\n  } = props;\n  return (\n    <CheckBoxField\n      {...input}\n      label={label}\n      defaultChecked={defaultChecked}\n      disabled={disabled}\n      className={className}\n      color={color}\n    />\n  );\n};\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: '',\n};\n\nexport default renderCheckBoxField;\n"]},"metadata":{},"sourceType":"module"}