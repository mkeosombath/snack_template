{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Charts/ChartJs/components/PolarArea.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Polar } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nvar data = {\n  datasets: [{\n    data: [11, 16, 7, 3, 14],\n    backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\n    label: 'My dataset',\n    borderColor: 'rgba(255,255,255,0.54)'\n  }],\n  labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue']\n};\nvar options = {\n  legend: {\n    position: 'bottom'\n  },\n  scale: {\n    gridLines: {\n      color: 'rgb(204, 204, 204)',\n      borderDash: [3, 3]\n    },\n    ticks: {\n      fontColor: 'rgb(204, 204, 204)'\n    }\n  }\n};\n\nvar PolarArea = function PolarArea(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 12,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, t('charts.react_chartjs.polar_area'))), React.createElement(Polar, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nPolarArea.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(PolarArea);","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Charts/ChartJs/components/PolarArea.jsx"],"names":["React","Card","CardBody","Col","Polar","withTranslation","PropTypes","data","datasets","backgroundColor","label","borderColor","labels","options","legend","position","scale","gridLines","color","borderDash","ticks","fontColor","PolarArea","t","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAE,CAAC;AACTD,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,CADG;AAETE,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAFR;AAGTC,IAAAA,KAAK,EAAE,YAHE;AAITC,IAAAA,WAAW,EAAE;AAJJ,GAAD,CADC;AAOXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,MAAnC;AAPG,CAAb;AAUA,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GADM;AAIdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,oBADE;AAETC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFH,KADN;AAKLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE;AADN;AALF;AAJO,CAAhB;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SAChB,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAAC,CAAC,iCAAD,CAA5B,CADF,CADF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEhB,IAAb;AAAmB,IAAA,OAAO,EAAEM,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADgB;AAAA,CAAlB;;AAaAS,SAAS,CAACE,SAAV,GAAsB;AACpBD,EAAAA,CAAC,EAAEjB,SAAS,CAACmB,IAAV,CAAeC;AADE,CAAtB;AAIA,eAAerB,eAAe,CAAC,QAAD,CAAf,CAA0BiB,SAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Polar } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst data = {\n  datasets: [{\n    data: [11, 16, 7, 3, 14],\n    backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\n    label: 'My dataset',\n    borderColor: 'rgba(255,255,255,0.54)',\n  }],\n  labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\n};\n\nconst options = {\n  legend: {\n    position: 'bottom',\n  },\n  scale: {\n    gridLines: {\n      color: 'rgb(204, 204, 204)',\n      borderDash: [3, 3],\n    },\n    ticks: {\n      fontColor: 'rgb(204, 204, 204)',\n    },\n  },\n};\n\nconst PolarArea = ({ t }) => (\n  <Col md={12} lg={12} xl={6}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('charts.react_chartjs.polar_area')}</h5>\n        </div>\n        <Polar data={data} options={options} />\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nPolarArea.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(PolarArea);\n"]},"metadata":{},"sourceType":"module"}