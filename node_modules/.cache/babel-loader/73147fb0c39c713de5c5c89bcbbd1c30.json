{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/containers/UI/RangeSliders/components/DoubleSliderType.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Range from '../../../../shared/components/range_slider/Range';\n\nvar DoubleSliderType = function DoubleSliderType(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, t('ui_elements.range_sliders.double_slider_type')), React.createElement(\"h5\", {\n    className: \"subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Use default range\")), React.createElement(\"div\", {\n    dir: \"ltr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Range, {\n    min: 0,\n    max: 1000,\n    value: [350, 635],\n    tipFormatter: function tipFormatter(value) {\n      return \"$\".concat(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })))));\n};\n\nDoubleSliderType.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(DoubleSliderType);","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/containers/UI/RangeSliders/components/DoubleSliderType.jsx"],"names":["React","Card","CardBody","Col","withTranslation","PropTypes","Range","DoubleSliderType","t","value","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,kDAAlB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SACvB,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAAC,CAAC,8CAAD,CAA5B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF,EAKE;AAAK,IAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE,CAAZ;AAAe,IAAA,GAAG,EAAE,IAApB;AAA0B,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CAAjC;AAA6C,IAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,wBAAQA,KAAR;AAAA,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CADF,CADuB;AAAA,CAAzB;;AAgBAF,gBAAgB,CAACG,SAAjB,GAA6B;AAC3BF,EAAAA,CAAC,EAAEH,SAAS,CAACM,IAAV,CAAeC;AADS,CAA7B;AAIA,eAAeR,eAAe,CAAC,QAAD,CAAf,CAA0BG,gBAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Range from '../../../../shared/components/range_slider/Range';\n\nconst DoubleSliderType = ({ t }) => (\n  <Col md={12} lg={6} xs={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('ui_elements.range_sliders.double_slider_type')}</h5>\n          <h5 className=\"subhead\">Use default range</h5>\n        </div>\n        <div dir=\"ltr\">\n          <Range min={0} max={1000} value={[350, 635]} tipFormatter={value => `$${value}`} />\n        </div>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nDoubleSliderType.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(DoubleSliderType);\n"]},"metadata":{},"sourceType":"module"}