{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Form/FormValidation/components/VerticalFormTwo.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport EyeIcon from 'mdi-react/EyeIcon';\nimport { withTranslation } from 'react-i18next';\nimport renderSelectField from '../../../../shared/components/form/Select';\nimport validate from './validate';\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      placeholder = _ref.placeholder,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"form__form-group-input-wrap form__form-group-input-wrap--error-above\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: placeholder,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"form__form-group-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, error));\n};\n\nrenderField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderField.defaultProps = {\n  placeholder: '',\n  meta: null,\n  type: 'text'\n};\n\nvar VerticalForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(VerticalForm, _PureComponent);\n\n  function VerticalForm() {\n    var _this;\n\n    _classCallCheck(this, VerticalForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VerticalForm).call(this));\n\n    _this.showPassword = function (e) {\n      e.preventDefault();\n\n      _this.setState(function (prevState) {\n        return {\n          showPassword: !prevState.showPassword\n        };\n      });\n    };\n\n    _this.state = {\n      showPassword: false\n    };\n    return _this;\n  }\n\n  _createClass(VerticalForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting,\n          t = _this$props.t;\n      var showPassword = this.state.showPassword;\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, t('forms.from_validation.vertical_form_validate_two')), React.createElement(\"h5\", {\n        className: \"subhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Errors are above fields, use class super\", React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \" form__form-group-input-wrap--error-above\"))), React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form__form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"form__form-group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"div\", {\n        className: \"form__form-group-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        component: renderField,\n        type: \"text\",\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form__form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"form__form-group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"E-mail\"), React.createElement(\"div\", {\n        className: \"form__form-group-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"email\",\n        component: renderField,\n        type: \"email\",\n        placeholder: \"example@mail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form__form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"form__form-group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Url\"), React.createElement(\"div\", {\n        className: \"form__form-group-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"url\",\n        component: renderField,\n        type: \"url\",\n        placeholder: \"https://themeforest.net\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form__form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"form__form-group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"div\", {\n        className: \"form__form-group-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"password\",\n        component: renderField,\n        type: showPassword ? 'text' : 'password',\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"form__form-group-button\".concat(showPassword ? ' active' : ''),\n        tabIndex: \"-1\",\n        onClick: function onClick(e) {\n          return _this2.showPassword(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(EyeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form__form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"form__form-group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Select Option\"), React.createElement(\"div\", {\n        className: \"form__form-group-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"select\",\n        component: renderSelectField,\n        type: \"text\",\n        className: \"form__form-group-input-wrap--error-above\",\n        options: [{\n          value: 'one',\n          label: 'One'\n        }, {\n          value: 'two',\n          label: 'Two'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(ButtonToolbar, {\n        className: \"form__button-toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Validate\"), React.createElement(Button, {\n        type: \"button\",\n        onClick: reset,\n        disabled: pristine || submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Cancel\"))))));\n    }\n  }]);\n\n  return VerticalForm;\n}(PureComponent);\n\nVerticalForm.propTypes = {\n  t: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport default reduxForm({\n  form: 'vertical_form_validation_two',\n  // a unique identifier for this form\n  validate: validate\n})(withTranslation('common')(VerticalForm));","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Form/FormValidation/components/VerticalFormTwo.jsx"],"names":["React","PureComponent","Card","CardBody","Col","Button","ButtonToolbar","Field","reduxForm","PropTypes","EyeIcon","withTranslation","renderSelectField","validate","renderField","input","placeholder","type","meta","touched","error","propTypes","shape","isRequired","string","bool","defaultProps","VerticalForm","showPassword","e","preventDefault","setState","prevState","state","props","handleSubmit","pristine","reset","submitting","t","value","label","func","form"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport EyeIcon from 'mdi-react/EyeIcon';\nimport { withTranslation } from 'react-i18next';\nimport renderSelectField from '../../../../shared/components/form/Select';\nimport validate from './validate';\n\nconst renderField = ({\n  input, placeholder, type, meta: { touched, error },\n}) => (\n  <div className=\"form__form-group-input-wrap form__form-group-input-wrap--error-above\">\n    <input {...input} placeholder={placeholder} type={type} />\n    {touched && error && <span className=\"form__form-group-error\">{error}</span>}\n  </div>\n);\n\nrenderField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n};\n\nrenderField.defaultProps = {\n  placeholder: '',\n  meta: null,\n  type: 'text',\n};\n\nclass VerticalForm extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      showPassword: false,\n    };\n  }\n\n  showPassword = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\n  };\n\n  render() {\n    const {\n      handleSubmit, pristine, reset, submitting, t,\n    } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <Col md={12} lg={12} xl={6}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{t('forms.from_validation.vertical_form_validate_two')}</h5>\n              <h5 className=\"subhead\">Errors are above fields, use class super\n                <span className=\"red-text\"> form__form-group-input-wrap--error-above</span>\n              </h5>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Username</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"username\"\n                    component={renderField}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">E-mail</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"email\"\n                    component={renderField}\n                    type=\"email\"\n                    placeholder=\"example@mail.com\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Url</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"url\"\n                    component={renderField}\n                    type=\"url\"\n                    placeholder=\"https://themeforest.net\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Password</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"password\"\n                    component={renderField}\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className={`form__form-group-button${showPassword ? ' active' : ''}`}\n                    tabIndex=\"-1\"\n                    onClick={e => this.showPassword(e)}\n                  ><EyeIcon />\n                  </button>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Select Option</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"select\"\n                    component={renderSelectField}\n                    type=\"text\"\n                    className=\"form__form-group-input-wrap--error-above\"\n                    options={[\n                      { value: 'one', label: 'One' },\n                      { value: 'two', label: 'Two' },\n                    ]}\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <Button color=\"primary\" type=\"submit\">Validate</Button>\n                <Button type=\"button\" onClick={reset} disabled={pristine || submitting}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'vertical_form_validation_two', // a unique identifier for this form\n  validate,\n})(withTranslation('common')(VerticalForm));\n"]},"metadata":{},"sourceType":"module"}