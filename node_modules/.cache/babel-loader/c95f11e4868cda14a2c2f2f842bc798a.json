{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Tables/EditableTable/components/EditableTable.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\nvar EditableTable =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(EditableTable, _PureComponent);\n\n  function EditableTable() {\n    var _this;\n\n    _classCallCheck(this, EditableTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableTable).call(this));\n\n    _this.getRandomDate = function (start, end) {\n      return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n    };\n\n    _this.createRows = function (numberOfRows) {\n      var rows = [];\n\n      for (var i = 1; i < numberOfRows + 1; i += 1) {\n        rows.push({\n          id: i,\n          first: ['Maria', 'Bobby  ', 'Alexander'][Math.floor(Math.random() * 3)],\n          last: ['Morisson', 'Brown  ', 'Medinberg'][Math.floor(Math.random() * 3)],\n          user: ['@dragon', '@hamster', '@cat'][Math.floor(Math.random() * 3)],\n          age: Math.min(100, Math.round(Math.random() * 30) + 20),\n          date: _this.getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n          location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor(Math.random() * 4)],\n          work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor(Math.random() * 5)]\n        });\n      }\n\n      return rows;\n    };\n\n    _this.heads = [{\n      key: 'id',\n      name: '#',\n      width: 80\n    }, {\n      key: 'first',\n      name: 'First Name',\n      editable: true\n    }, {\n      key: 'last',\n      name: 'Last Name',\n      editable: true\n    }, {\n      key: 'user',\n      name: 'Username',\n      editable: true\n    }, {\n      key: 'age',\n      name: 'Age',\n      editable: true\n    }, {\n      key: 'date',\n      name: 'Date',\n      editable: true\n    }, {\n      key: 'location',\n      name: 'Location',\n      editable: true\n    }, {\n      key: 'work',\n      name: 'Work',\n      editable: true\n    }];\n    _this.state = {\n      rows: _this.createRows(10)\n    };\n    return _this;\n  }\n\n  _createClass(EditableTable, [{\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.rows;\n      return React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Editable table\"), React.createElement(\"h5\", {\n        className: \"subhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Use table with \", 'column\\'s', \" option\", React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" editable\"))), React.createElement(EditTable, {\n        heads: this.heads,\n        rows: rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EditableTable;\n}(PureComponent);\n\nexport { EditableTable as default };","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Tables/EditableTable/components/EditableTable.jsx"],"names":["React","PureComponent","Card","CardBody","Col","EditTable","EditableTable","getRandomDate","start","end","Date","getTime","Math","random","toLocaleDateString","createRows","numberOfRows","rows","i","push","id","first","floor","last","user","age","min","round","date","location","work","heads","key","name","width","editable","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\nexport default class EditableTable extends PureComponent {\n  constructor() {\n    super();\n    this.heads = [\n      {\n        key: 'id',\n        name: '#',\n        width: 80,\n      },\n      {\n        key: 'first',\n        name: 'First Name',\n        editable: true,\n      },\n      {\n        key: 'last',\n        name: 'Last Name',\n        editable: true,\n      },\n      {\n        key: 'user',\n        name: 'Username',\n        editable: true,\n      },\n      {\n        key: 'age',\n        name: 'Age',\n        editable: true,\n      },\n      {\n        key: 'date',\n        name: 'Date',\n        editable: true,\n      },\n      {\n        key: 'location',\n        name: 'Location',\n        editable: true,\n      },\n      {\n        key: 'work',\n        name: 'Work',\n        editable: true,\n      },\n    ];\n\n    this.state = { rows: this.createRows(10) };\n  }\n\n  getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  createRows = (numberOfRows) => {\n    const rows = [];\n    for (let i = 1; i < numberOfRows + 1; i += 1) {\n      rows.push({\n        id: i,\n        first: ['Maria', 'Bobby  ', 'Alexander'][Math.floor((Math.random() * 3))],\n        last: ['Morisson', 'Brown  ', 'Medinberg'][Math.floor((Math.random() * 3))],\n        user: ['@dragon', '@hamster', '@cat'][Math.floor((Math.random() * 3))],\n        age: Math.min(100, Math.round(Math.random() * 30) + 20),\n        date: this.getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n        location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor((Math.random() * 4))],\n        work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor((Math.random() * 5))],\n      });\n    }\n    return rows;\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">Editable table</h5>\n              <h5 className=\"subhead\">Use table with {'column\\'s'} option\n                <span className=\"red-text\"> editable</span>\n              </h5>\n            </div>\n            <EditTable heads={this.heads} rows={rows} />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}