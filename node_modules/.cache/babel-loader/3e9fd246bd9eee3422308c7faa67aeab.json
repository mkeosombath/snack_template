{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/template/src/containers/Dashboards/Default/components/ActiveUsers.jsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\n\nfunction getRandomArbitrary(minValue, maxValue) {\n  var ratio = maxValue - minValue + minValue;\n  return Math.random() * ratio;\n}\n\nfunction generateRandomData(dataLength, minDeviationValue, maxDeviationValue, minRange, maxRange) {\n  var rangeFactor = (maxRange - minRange) / dataLength;\n  return Array.from({\n    length: dataLength\n  }, function (v, k) {\n    return {\n      name: k,\n      point: k * rangeFactor + getRandomArbitrary(minDeviationValue, maxDeviationValue),\n      amt: 2000\n    };\n  });\n}\n\nvar data = generateRandomData(100, -2000, 2000, 300, 6000);\n\nfunction tickFormer(tick) {\n  return \"\".concat(tick / 1000, \"k\");\n}\n\nvar ActiveUsers = function ActiveUsers(_ref) {\n  var t = _ref.t,\n      dir = _ref.dir,\n      themeName = _ref.themeName;\n  return React.createElement(Panel, {\n    lg: 6,\n    xl: 9,\n    md: 12,\n    title: t('dashboard_mobile_app.active_users'),\n    subhead: \"See how users involve into app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dir: \"ltr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 195,\n    className: \"dashboard__active-users-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    height: 195,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    tickLine: false,\n    tickFormatter: tickFormer,\n    interval: \"preserveStartEnd\",\n    width: '100%' // tick={{ transform: 'translate(-30, 0)', fontSize: 11 }}\n    ,\n    orientation: dir === 'rtl' ? 'right' : 'left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    hide: true,\n    padding: {\n      left: 30,\n      right: 30\n    },\n    reversed: dir === 'rtl',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    vertical: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"point\",\n    dot: false,\n    stroke: \"#b8e986\",\n    strokeWidth: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))));\n};\n\nActiveUsers.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(function (state) {\n  return {\n    themeName: state.theme.className\n  };\n})(withTranslation('common')(ActiveUsers));","map":{"version":3,"sources":["/Users/monica/Desktop/template/src/containers/Dashboards/Default/components/ActiveUsers.jsx"],"names":["React","connect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","withTranslation","PropTypes","Panel","getTooltipStyles","getRandomArbitrary","minValue","maxValue","ratio","Math","random","generateRandomData","dataLength","minDeviationValue","maxDeviationValue","minRange","maxRange","rangeFactor","Array","from","length","v","k","name","point","amt","data","tickFormer","tick","ActiveUsers","t","dir","themeName","left","right","propTypes","func","isRequired","string","state","theme","className"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\n\nimport getTooltipStyles from '../../../../shared/helpers';\n\nfunction getRandomArbitrary(minValue, maxValue) {\n  const ratio = (maxValue - minValue) + minValue;\n  return Math.random() * ratio;\n}\n\nfunction generateRandomData(dataLength, minDeviationValue, maxDeviationValue, minRange, maxRange) {\n  const rangeFactor = (maxRange - minRange) / dataLength;\n\n  return Array.from({ length: dataLength }, (v, k) => (\n    {\n      name: k,\n      point: (k * rangeFactor) + getRandomArbitrary(minDeviationValue, maxDeviationValue),\n      amt: 2000,\n    }));\n}\n\nconst data = generateRandomData(100, -2000, 2000, 300, 6000);\n\nfunction tickFormer(tick) {\n  return `${tick / 1000}k`;\n}\n\nconst ActiveUsers = ({ t, dir, themeName }) => (\n  <Panel\n    lg={6}\n    xl={9}\n    md={12}\n    title={t('dashboard_mobile_app.active_users')}\n    subhead=\"See how users involve into app\"\n  >\n    <div dir=\"ltr\">\n      <ResponsiveContainer height={195} className=\"dashboard__active-users-chart\">\n        <LineChart\n          height={195}\n          data={data}\n        >\n          <YAxis\n            tickLine={false}\n            tickFormatter={tickFormer}\n            interval=\"preserveStartEnd\"\n            width={'100%'}\n            // tick={{ transform: 'translate(-30, 0)', fontSize: 11 }}\n            orientation={dir === 'rtl' ? 'right' : 'left'}\n          />\n          <XAxis\n            hide\n            padding={{ left: 30, right: 30 }}\n            reversed={dir === 'rtl'}\n          />\n          <CartesianGrid vertical={false} />\n          <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n          <Line type=\"linear\" dataKey=\"point\" dot={false} stroke=\"#b8e986\" strokeWidth={2} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  </Panel>\n);\n\nActiveUsers.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(ActiveUsers));\n"]},"metadata":{},"sourceType":"module"}