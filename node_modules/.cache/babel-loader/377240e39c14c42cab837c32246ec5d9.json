{"ast":null,"code":"import _classCallCheck from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monica/Desktop/snack-training/template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monica/Desktop/snack-training/template/src/shared/components/pagination/Pagination.jsx\";\nimport React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport range from 'lodash.range';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\n\nvar CustPag =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustPag, _React$Component);\n\n  function CustPag() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustPag);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustPag)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setPage = function (page) {\n      var _this$props = _this.props,\n          itemsCount = _this$props.itemsCount,\n          itemsToShow = _this$props.itemsToShow,\n          onChangePage = _this$props.onChangePage; // calculate total pages\n\n      var totalPages = Math.ceil(itemsCount / itemsToShow);\n\n      if (page < 1 || page > totalPages) {\n        return;\n      } // call change page function in parent component\n\n\n      onChangePage(page);\n    };\n\n    _this.getPager = function (totalItems, curPage, pSize) {\n      // default to first page\n      var currentPage = curPage || 1; // default page size is 10\n\n      var pageSize = pSize || 10; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage;\n      var endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else if (currentPage <= 6) {\n        // more than 10 total pages so calculate start and end pages\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = range(startPage, endPage + 1); // return object with all pager properties required by the view\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CustPag, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          itemsCount = _this$props2.itemsCount,\n          itemsToShow = _this$props2.itemsToShow,\n          pageOfItems = _this$props2.pageOfItems;\n      var pages = [];\n\n      for (var i = 1; i <= Math.ceil(itemsCount / itemsToShow); i += 1) {\n        pages.push(i);\n      }\n\n      return itemsCount ? React.createElement(\"div\", {\n        className: \"pagination__wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, itemsCount <= 1 ? '' : React.createElement(Pagination, {\n        className: \"pagination\",\n        dir: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(PaginationItem, {\n        className: \"pagination__item\",\n        disabled: pageOfItems === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        className: \"pagination__link pagination__link--arrow\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.setPage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ChevronLeftIcon, {\n        className: \"pagination__link-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), pages.map(function (page) {\n        return React.createElement(PaginationItem, {\n          className: \"pagination__item\",\n          key: page,\n          active: pageOfItems === page,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(PaginationLink, {\n          className: \"pagination__link\",\n          type: \"button\",\n          onClick: function onClick() {\n            return _this2.setPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, page));\n      }), React.createElement(PaginationItem, {\n        className: \"pagination__item\",\n        disabled: pageOfItems === pages.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        className: \"pagination__link pagination__link--arrow\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.setPage(pages.length);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(ChevronRightIcon, {\n        className: \"pagination__link-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"pagination-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Showing \", \"\".concat(itemsToShow * (pageOfItems - 1) + 1, \" \"), \"to \", itemsToShow * pageOfItems > itemsCount ? itemsCount : itemsToShow * pageOfItems, \" of \", itemsCount))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CustPag;\n}(React.Component);\n/* eslint-enable */\n\n\nCustPag.propTypes = {\n  onChangePage: PropTypes.func.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  pageOfItems: PropTypes.number.isRequired\n};\nexport { CustPag as default };","map":{"version":3,"sources":["/Users/monica/Desktop/snack-training/template/src/shared/components/pagination/Pagination.jsx"],"names":["React","Pagination","PaginationItem","PaginationLink","PropTypes","range","ChevronRightIcon","ChevronLeftIcon","CustPag","setPage","page","props","itemsCount","itemsToShow","onChangePage","totalPages","Math","ceil","getPager","totalItems","curPage","pSize","currentPage","pageSize","startPage","endPage","startIndex","endIndex","min","pages","pageOfItems","i","push","map","length","Component","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport range from 'lodash.range';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\n\nexport default class CustPag extends React.Component {\n  static propTypes = {\n    onChangePage: PropTypes.func.isRequired,\n    itemsCount: PropTypes.number.isRequired,\n    itemsToShow: PropTypes.number.isRequired,\n    pageOfItems: PropTypes.number.isRequired,\n  };\n\n  setPage = (page) => {\n    const { itemsCount, itemsToShow, onChangePage } = this.props;\n\n    // calculate total pages\n    const totalPages = Math.ceil(itemsCount / itemsToShow);\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // call change page function in parent component\n    onChangePage(page);\n  };\n\n  getPager = (totalItems, curPage, pSize) => {\n    // default to first page\n    const currentPage = curPage || 1;\n\n    // default page size is 10\n    const pageSize = pSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage;\n    let endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else if (currentPage <= 6) {\n      // more than 10 total pages so calculate start and end pages\n      startPage = 1;\n      endPage = 10;\n    } else if (currentPage + 4 >= totalPages) {\n      startPage = totalPages - 9;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - 5;\n      endPage = currentPage + 4;\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min((startIndex + pageSize) - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = range(startPage, endPage + 1);\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems,\n      currentPage,\n      pageSize,\n      totalPages,\n      startPage,\n      endPage,\n      startIndex,\n      endIndex,\n      pages,\n    };\n  };\n\n  render() {\n    const { itemsCount, itemsToShow, pageOfItems } = this.props;\n\n    const pages = [];\n    for (let i = 1; i <= Math.ceil(itemsCount / itemsToShow); i += 1) {\n      pages.push(i);\n    }\n\n    return itemsCount ? (\n      <div className=\"pagination__wrap\">\n        {(itemsCount <= 1) ? ''\n          : (\n            <Pagination className=\"pagination\" dir=\"ltr\">\n              <PaginationItem className=\"pagination__item\" disabled={pageOfItems === 1}>\n                <PaginationLink\n                  className=\"pagination__link pagination__link--arrow\"\n                  type=\"button\"\n                  onClick={() => this.setPage(1)}\n                >\n                  <ChevronLeftIcon className=\"pagination__link-icon\" />\n                </PaginationLink>\n              </PaginationItem>\n              {pages.map(page => (\n                <PaginationItem\n                  className=\"pagination__item\"\n                  key={page}\n                  active={pageOfItems === page}\n                >\n                  <PaginationLink\n                    className=\"pagination__link\"\n                    type=\"button\"\n                    onClick={() => this.setPage(page)}\n                  >\n                    {page}\n                  </PaginationLink>\n                </PaginationItem>\n              ))\n          }\n              <PaginationItem className=\"pagination__item\" disabled={pageOfItems === pages.length}>\n                <PaginationLink\n                  className=\"pagination__link pagination__link--arrow\"\n                  type=\"button\"\n                  onClick={() => this.setPage(pages.length)}\n                >\n                  <ChevronRightIcon className=\"pagination__link-icon\" />\n                </PaginationLink>\n              </PaginationItem>\n            </Pagination>\n          )\n          }\n        <div className=\"pagination-info\">\n          <span>Showing {`${(itemsToShow * (pageOfItems - 1)) + 1} `}\n              to {itemsToShow * pageOfItems > itemsCount ? itemsCount\n            : itemsToShow * pageOfItems} of {itemsCount}\n          </span>\n        </div>\n      </div>\n    ) : <div />;\n  }\n}\n\n/* eslint-enable */\n"]},"metadata":{},"sourceType":"module"}